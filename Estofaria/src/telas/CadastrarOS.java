/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastrarOrdemServico.java
 *
 * Created on 14/02/2011, 18:44:34
 */

package telas;

import banco.BD_Clientes;
import banco.BD_OrdemServico;
import banco.BD_Receita;
import banco.BD_Servico;
import impressao.Imprimir;
import impressao.Imprimir_Termal;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import objetos.Cliente;
import objetos.Funcionario;
import objetos.Kernel;
import objetos.OrdemServico;
import objetos.Receita;
import objetos.Servico;

/**
 *
 * @author vagner
 */
public class CadastrarOS extends javax.swing.JPanel {

    private Kernel          kernel;         
    private OrdemServico    obj_OrdemServico   = null;
    private Servico         obj_Servico        = null;
    private Cliente         obj_Cliente        = null;
    private Receita         obj_Receita        = null;
    private Funcionario     obj_Funcionario    = null;
    private BD_OrdemServico BD_OrdemServico    = null;
    private BD_Clientes     bd_Cliente         = null;
    private BD_Servico      bd_Servico         = null;
    private BD_Receita      bd_Receita         = null;
    private Imprimir        imprimir           = null;
    private Imprimir_Termal imprimir_termal    = null;
    private final int       excluir = 9;
    private final int       editar  = 8;
    private DecimalFormat fmt = new DecimalFormat("#0.00");
    
    /** Creates new form CadastrarAnimais */
    public CadastrarOS(Kernel obj,int acao,Object texto) {        
        kernel = obj;
        bd_Cliente = new BD_Clientes(kernel);
        bd_Servico = new BD_Servico(kernel);
        bd_Receita = new BD_Receita(kernel);
        initComponents();                
        
        if(acao==1){
            String vetor[] = ((String)texto).split("-");
            ordem_servico_id.setText(vetor[0]);
            obj_Cliente = bd_Cliente.getClienteID(Integer.parseInt(vetor[1]));
            cliente_id.setText(String.valueOf(obj_Cliente.getCliente_id()));
            campo_nome.setText(obj_Cliente.getNome());            
        }
        this.Tabela("",0);
        botao_imprimir.setEnabled(false);
        //botao_imprimir_termal.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sp = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        painel_cadastrar_area3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        campo_entrada = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campo_dia = new javax.swing.JTextField();
        campo_mes = new javax.swing.JTextField();
        campo_ano = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        campo_situacao = new javax.swing.JComboBox();
        campo_nome = new javax.swing.JTextField();
        buscar_cliente = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        campo_funcionario = new javax.swing.JTextField();
        combo_servico = new javax.swing.JComboBox();
        getdata = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        campo_dia1 = new javax.swing.JTextField();
        campo_mes1 = new javax.swing.JTextField();
        campo_ano1 = new javax.swing.JTextField();
        getdataabertura = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        campo_produto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        campo_modelo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        campo_referencia = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        campo_valor = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        campo_restante = new javax.swing.JTextField();
        Calcular = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        campo_formapagamento = new javax.swing.JTextField();
        painel_cadastrar_area4 = new javax.swing.JPanel();
        voltar = new javax.swing.JButton();
        salvar_Categoria = new javax.swing.JButton();
        Contaspagar_id = new javax.swing.JLabel();
        ordem_servico_id = new javax.swing.JLabel();
        cliente_id = new javax.swing.JLabel();
        funcionario_id = new javax.swing.JLabel();
        servico_id = new javax.swing.JLabel();
        botao_imprimir = new javax.swing.JButton();
        Cliente_id = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        campo_descricao = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        busca = new javax.swing.JButton();
        campo_cliente = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cod_cliente = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 204));

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Cod", "Cliente", "Funcionario", "Serviço", "Situação", "Data", "Valor", "Editar", "Excluir"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.setDragEnabled(true);
        tabela.setRowHeight(25);
        tabela.getTableHeader().setReorderingAllowed(false);
        sp.setViewportView(tabela);

        painel_cadastrar_area3.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        painel_cadastrar_area3.setForeground(new java.awt.Color(204, 204, 204));

        jLabel4.setText("Cliente:");

        jLabel1.setText("Pagou (R$):");

        jLabel2.setText("Data Prometida:");

        jLabel3.setText("Situação:");

        campo_situacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aberto", "Fechado" }));

        campo_nome.setEditable(false);

        buscar_cliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/question.gif"))); // NOI18N
        buscar_cliente.setToolTipText("Caso não tenha a temporada, cadastre aqui.");
        buscar_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar_clienteActionPerformed(evt);
            }
        });

        jLabel7.setText("Serviço:");

        jLabel8.setText("Funcionário(a):");

        campo_funcionario.setEditable(false);

        combo_servico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_servico.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_servicoItemStateChanged(evt);
            }
        });

        getdata.setText("Obter data");
        getdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getdataActionPerformed(evt);
            }
        });

        jLabel6.setText("Data abertura:");

        getdataabertura.setText("Obter data");
        getdataabertura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getdataaberturaActionPerformed(evt);
            }
        });

        jLabel9.setText("Produto:");

        jLabel10.setText("Material:");

        jLabel11.setText("Marca:");

        jLabel13.setText("Valor Total(R$):");

        jLabel15.setText("Restante (R$):");

        Calcular.setText("Calcular");
        Calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcularActionPerformed(evt);
            }
        });

        jLabel19.setText("Forma Pagamento:");

        org.jdesktop.layout.GroupLayout painel_cadastrar_area3Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area3);
        painel_cadastrar_area3.setLayout(painel_cadastrar_area3Layout);
        painel_cadastrar_area3Layout.setHorizontalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .addContainerGap()
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel9)
                    .add(jLabel4)
                    .add(jLabel7)
                    .add(jLabel8)
                    .add(jLabel13)
                    .add(jLabel1)
                    .add(jLabel15)
                    .add(jLabel10)
                    .add(jLabel11)
                    .add(jLabel19))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, campo_funcionario)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, campo_nome, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buscar_cliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(campo_produto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 174, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(campo_situacao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(combo_servico, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(campo_valor)
                                .add(campo_entrada, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                            .add(campo_restante, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel6)
                                    .add(jLabel2))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(campo_dia)
                                    .add(campo_dia1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(campo_mes)
                                    .add(campo_mes1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(campo_ano)
                                    .add(campo_ano1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(Calcular))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                                .add(getdataabertura, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap(26, Short.MAX_VALUE))
                            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                                .add(getdata)
                                .addContainerGap())))
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, campo_modelo)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, campo_formapagamento)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, campo_referencia, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
                        .addContainerGap(31, Short.MAX_VALUE))))
        );
        painel_cadastrar_area3Layout.setVerticalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .addContainerGap()
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel4)
                        .add(campo_nome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(buscar_cliente))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(campo_funcionario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(combo_servico, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(8, 8, 8)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(campo_mes1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(campo_mes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel13)
                            .add(campo_valor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(3, 3, 3)
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(campo_entrada, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1)
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel15)
                            .add(Calcular)
                            .add(campo_restante, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                                .add(2, 2, 2)
                                .add(jLabel6))
                            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                                .add(campo_dia1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(campo_dia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, painel_cadastrar_area3Layout.createSequentialGroup()
                                .add(getdataabertura, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(getdata, 0, 0, Short.MAX_VALUE)))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, painel_cadastrar_area3Layout.createSequentialGroup()
                            .add(campo_ano1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(campo_ano, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(23, 23, 23)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(campo_produto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(campo_situacao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(campo_modelo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel10))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(campo_referencia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel11))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(campo_formapagamento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel19))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        painel_cadastrar_area4.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        voltar.setBackground(new java.awt.Color(204, 204, 204));
        voltar.setForeground(new java.awt.Color(204, 204, 204));
        voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/back.png"))); // NOI18N
        voltar.setToolTipText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        salvar_Categoria.setBackground(new java.awt.Color(204, 204, 204));
        salvar_Categoria.setForeground(new java.awt.Color(204, 204, 204));
        salvar_Categoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/salvar.png"))); // NOI18N
        salvar_Categoria.setToolTipText("Salvar");
        salvar_Categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvar_CategoriaActionPerformed(evt);
            }
        });

        Contaspagar_id.setBackground(new java.awt.Color(204, 204, 204));
        Contaspagar_id.setForeground(new java.awt.Color(204, 204, 204));
        Contaspagar_id.setText("0");

        ordem_servico_id.setForeground(new java.awt.Color(204, 204, 204));
        ordem_servico_id.setText("0");

        cliente_id.setForeground(new java.awt.Color(204, 204, 204));
        cliente_id.setText("0");

        funcionario_id.setBackground(new java.awt.Color(255, 241, 88));
        funcionario_id.setForeground(new java.awt.Color(204, 204, 204));
        funcionario_id.setText("0");

        servico_id.setBackground(new java.awt.Color(255, 241, 88));
        servico_id.setForeground(new java.awt.Color(204, 204, 204));
        servico_id.setText("0");

        botao_imprimir.setBackground(new java.awt.Color(204, 204, 204));
        botao_imprimir.setForeground(new java.awt.Color(204, 204, 204));
        botao_imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/impressora.png"))); // NOI18N
        botao_imprimir.setToolTipText("Imprimir");
        botao_imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_imprimirActionPerformed(evt);
            }
        });

        Cliente_id.setBackground(new java.awt.Color(255, 241, 88));
        Cliente_id.setForeground(new java.awt.Color(204, 204, 204));
        Cliente_id.setText("0");

        jLabel16.setText("Salvar");

        jLabel17.setText("Voltar");

        jLabel18.setText("Imprimir A4");

        org.jdesktop.layout.GroupLayout painel_cadastrar_area4Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area4);
        painel_cadastrar_area4.setLayout(painel_cadastrar_area4Layout);
        painel_cadastrar_area4Layout.setHorizontalGroup(
            painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area4Layout.createSequentialGroup()
                .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(salvar_Categoria, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(painel_cadastrar_area4Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel16)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(voltar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(painel_cadastrar_area4Layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jLabel17)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(botao_imprimir, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel18))
                .add(92, 92, 92)
                .add(ordem_servico_id)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cliente_id)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(funcionario_id)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(servico_id)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 512, Short.MAX_VALUE)
                .add(Contaspagar_id, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(44, 44, 44))
            .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(painel_cadastrar_area4Layout.createSequentialGroup()
                    .add(303, 303, 303)
                    .add(Cliente_id)
                    .addContainerGap(595, Short.MAX_VALUE)))
        );
        painel_cadastrar_area4Layout.setVerticalGroup(
            painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area4Layout.createSequentialGroup()
                .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(salvar_Categoria)
                    .add(voltar)
                    .add(painel_cadastrar_area4Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(Contaspagar_id)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel16)
                    .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel17)
                        .add(jLabel18)))
                .addContainerGap(13, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, painel_cadastrar_area4Layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ordem_servico_id)
                    .add(cliente_id)
                    .add(funcionario_id)
                    .add(servico_id))
                .addContainerGap())
            .add(painel_cadastrar_area4Layout.createSequentialGroup()
                .add(botao_imprimir)
                .add(33, 33, 33))
            .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.TRAILING, painel_cadastrar_area4Layout.createSequentialGroup()
                    .addContainerGap(62, Short.MAX_VALUE)
                    .add(Cliente_id)
                    .add(16, 16, 16)))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        jLabel5.setText("Descrição sobre o serviço:");

        campo_descricao.setColumns(20);
        campo_descricao.setLineWrap(true);
        campo_descricao.setRows(5);
        jScrollPane1.setViewportView(campo_descricao);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .add(jLabel5))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filtro"));
        jPanel3.setForeground(new java.awt.Color(204, 204, 204));

        busca.setText("Buscar");
        busca.setToolTipText("Buscar");
        busca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaActionPerformed(evt);
            }
        });

        campo_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_clienteKeyPressed(evt);
            }
        });

        jLabel12.setText("Nome:");

        jLabel14.setText("Codigo:");

        cod_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cod_clienteKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel12)
                    .add(jLabel14))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(campo_cliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 156, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(cod_cliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(busca, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(campo_cliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(13, 13, 13)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(cod_cliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(busca))
                .add(29, 29, 29))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 908, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(18, 18, 18))
            .add(painel_cadastrar_area4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 9, Short.MAX_VALUE)
                        .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void salvar_CategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvar_CategoriaActionPerformed
        // TODO add your handling code here:
        if(!campo_nome.getText().equals("")){SalvarOrdemServico();}
}//GEN-LAST:event_salvar_CategoriaActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        kernel.Tela(0, kernel,0,null,null);
}//GEN-LAST:event_voltarActionPerformed

    private void buscar_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar_clienteActionPerformed
        // TODO add your handling code here:
        Object objeto = ordem_servico_id.getText();       
        kernel.Tela(12,kernel,1,objeto,null);        
}//GEN-LAST:event_buscar_clienteActionPerformed

    private void combo_servicoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_servicoItemStateChanged
        // TODO add your handling code here:
        servico_id.setText(String.valueOf(bd_Servico.getServicoIDNome((String)combo_servico.getSelectedItem())));
    }//GEN-LAST:event_combo_servicoItemStateChanged

    private void getdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getdataActionPerformed
        // TODO add your handling code here:
        String vet_data[] = (new SimpleDateFormat("dd-MM-yyyy").format(new Date()).toString()).split("-");
        
        campo_dia.setText(vet_data[0]);
        campo_mes.setText(vet_data[1]);
        campo_ano.setText(vet_data[2]);
    }//GEN-LAST:event_getdataActionPerformed

    private void botao_imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_imprimirActionPerformed
        // TODO add your handling code here:
        imprimir = new Imprimir(kernel);
        try {
            imprimir.ImprimirOS(Integer.parseInt(ordem_servico_id.getText()));
        } catch (SQLException ex) {
            Logger.getLogger(CadastrarOS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botao_imprimirActionPerformed

    private void getdataaberturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getdataaberturaActionPerformed
        // TODO add your handling code here:
        String vet_data[] = (new SimpleDateFormat("dd-MM-yyyy").format(new Date()).toString()).split("-");
        
        campo_dia1.setText(vet_data[0]);
        campo_mes1.setText(vet_data[1]);
        campo_ano1.setText(vet_data[2]);
        
    }//GEN-LAST:event_getdataaberturaActionPerformed

    private void buscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaActionPerformed
        // TODO add your handling code here:
        Tabela(campo_cliente.getText(),Integer.parseInt(cod_cliente.getText().equals("")?"0":cod_cliente.getText()));
        campo_cliente.setText("");
        cod_cliente.setText("");
}//GEN-LAST:event_buscaActionPerformed

    private void campo_clienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_clienteKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
        Tabela(campo_cliente.getText(),Integer.parseInt(cod_cliente.getText().equals("")?"0":cod_cliente.getText()));
        campo_cliente.setText("");
        cod_cliente.setText("");
        }
    }//GEN-LAST:event_campo_clienteKeyPressed

    private void cod_clienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cod_clienteKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){            
            Tabela(campo_cliente.getText(),Integer.parseInt(cod_cliente.getText().equals("")?"0":cod_cliente.getText()));
            campo_cliente.setText("");
            cod_cliente.setText("");
        }
    }//GEN-LAST:event_cod_clienteKeyPressed

    private void CalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcularActionPerformed
        // TODO add your handling code here:
        double entra = Double.parseDouble((!campo_entrada.getText().equals(""))?campo_entrada.getText().replace(",", "."):"0.0");
        double desc = Double.parseDouble(((!campo_valor.getText().equals(""))?campo_valor.getText().replace(",", "."):"0.0"));
        campo_restante.setText(fmt.format(desc-entra));
    }//GEN-LAST:event_CalcularActionPerformed

    //SALVAR OrdemServico
    private void SalvarOrdemServico(){        
        BD_OrdemServico     = new BD_OrdemServico(kernel);
        obj_OrdemServico    = new OrdemServico();
        obj_Servico         = new Servico();
        obj_Cliente         = new Cliente();
        obj_Funcionario     = new Funcionario();
        
        if(ordem_servico_id.getText().equals("0")){
            try {
                
                obj_OrdemServico.setData_abertura(new SimpleDateFormat("yyyy-MM-dd").parse(campo_ano1.getText()+"-"+campo_mes1.getText()+"-"+campo_dia1.getText()));
                
                obj_OrdemServico.setData_entrega(new SimpleDateFormat("yyyy-MM-dd").parse(campo_ano.getText()+"-"+campo_mes.getText()+"-"+campo_dia.getText()));
                obj_OrdemServico.setValor(Double.parseDouble((!campo_valor.getText().equals(""))?campo_valor.getText().replace(",", "."):"0.0"));
                obj_OrdemServico.setEntrada(Double.parseDouble((!campo_entrada.getText().equals(""))?campo_entrada.getText().replace(",", "."):"0.0"));
                obj_OrdemServico.setRestante(Double.parseDouble((!campo_restante.getText().equals(""))?campo_restante.getText().replace(",", "."):"0.0"));
                obj_OrdemServico.setStatus(((campo_situacao.getSelectedItem().toString().equals("Aberto"))?0:1));   
                obj_OrdemServico.setDescricao(campo_descricao.getText()); 
                obj_OrdemServico.setProduto(campo_produto.getText()); 
                obj_OrdemServico.setModelo(campo_modelo.getText()); 
                obj_OrdemServico.setReferencia(campo_referencia.getText()); 
                obj_OrdemServico.setFormapagamento(campo_formapagamento.getText()); 
            //    obj_OrdemServico.setObservacao(campo_observacao.getText()); 
                
                //SETANDO CLIENTE
                obj_Cliente.setCliente_id(Integer.parseInt(cliente_id.getText()));                
                obj_OrdemServico.setCliente(obj_Cliente);
                
                //SETANDO SERVICO
                obj_Servico.setServico_id(Integer.parseInt(servico_id.getText()));                
                obj_OrdemServico.setServico(obj_Servico);
                
                //SETANDO FUNCIONARIO
                obj_Funcionario.setFuncionario_id(Integer.parseInt(funcionario_id.getText()));                
                obj_OrdemServico.setFuncionario(obj_Funcionario);
                
                if(!campo_nome.getText().equals("")){
                    BD_OrdemServico.Salvar(obj_OrdemServico);
                }
                
            } catch (ParseException ex) {
                Logger.getLogger(CadastrarOS.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else{            
            try {
                obj_OrdemServico.setOrdem_servico_id(Integer.parseInt(ordem_servico_id.getText()));    
              
                obj_OrdemServico.setData_abertura(new SimpleDateFormat("yyyy-MM-dd").parse(campo_ano1.getText()+"-"+campo_mes1.getText()+"-"+campo_dia1.getText()));
                obj_OrdemServico.setData_entrega(new SimpleDateFormat("yyyy-MM-dd").parse(campo_ano.getText()+"-"+campo_mes.getText()+"-"+campo_dia.getText()));
                  obj_OrdemServico.setValor(Double.parseDouble((!campo_valor.getText().equals(""))?campo_valor.getText().replace(",", "."):"0.0"));
                obj_OrdemServico.setEntrada(Double.parseDouble((!campo_entrada.getText().equals(""))?campo_entrada.getText().replace(",", "."):"0.0"));
                obj_OrdemServico.setRestante(Double.parseDouble((!campo_restante.getText().equals(""))?campo_restante.getText().replace(",", "."):"0.0"));
                obj_OrdemServico.setStatus(((campo_situacao.getSelectedItem().toString().equals("Aberto"))?0:1));   
                obj_OrdemServico.setDescricao(campo_descricao.getText()); 
                obj_OrdemServico.setProduto(campo_produto.getText()); 
                obj_OrdemServico.setModelo(campo_modelo.getText()); 
                obj_OrdemServico.setReferencia(campo_referencia.getText()); 
                obj_OrdemServico.setFormapagamento(campo_formapagamento.getText()); 
           //     obj_OrdemServico.setObservacao(campo_observacao.getText()); 
                
                //SETANDO CLIENTE
                obj_Cliente.setCliente_id(Integer.parseInt(cliente_id.getText()));                
                obj_OrdemServico.setCliente(obj_Cliente);
                
                //SETANDO SERVICO
                obj_Servico.setServico_id(Integer.parseInt(servico_id.getText()));                
                obj_OrdemServico.setServico(obj_Servico);
                
                //SETANDO FUNCIONARIO
                obj_Funcionario.setFuncionario_id(Integer.parseInt(funcionario_id.getText()));                
                obj_OrdemServico.setFuncionario(obj_Funcionario);
                obj_OrdemServico.setOrdem_servico_id(Integer.parseInt(ordem_servico_id.getText()));
                
                BD_OrdemServico.Atualizar(obj_OrdemServico);
            } catch (ParseException ex) {
                Logger.getLogger(CadastrarOS.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        campo_nome.setText("");         
        campo_entrada.setText("");
        campo_valor.setText("");
        campo_restante.setText("");
        campo_dia.setText(""); 
        campo_mes.setText(""); 
        campo_ano.setText(""); 
        campo_descricao.setText(""); 
        campo_referencia.setText(""); 
        campo_formapagamento.setText(""); 
        campo_modelo.setText(""); 
        campo_produto.setText(""); 
//        campo_observacao.setText(""); 
        campo_situacao.setSelectedIndex(0);
        
        ordem_servico_id.setText("0"); 
        cliente_id.setText("0");         
        servico_id.setText("0");
        //PREENCHER A TABELA DE DADOS COM AS ÁREAS
        Tabela("",0);
    }
    
    //TABELA OrdemServico
    public void Tabela(String nome, int cod_id){
        
        //////OBTENDO DADOS DO FUNCIONÁRIO///////
        Funcionario obj = kernel.getFuncionario();
        funcionario_id.setText(String.valueOf(obj.getFuncionario_id()));
        campo_funcionario.setText(obj.getNome());        
        /////////////////////////////////////////
        
        /********* PREENCHENDO O VETOR Servico *************/
        Servico[] servico_vetor = null;
        
            try {
                servico_vetor = bd_Servico.getServico();
            } catch (SQLException exx) {
                Logger.getLogger(CadastrarOS.class.getName()).log(Level.SEVERE, null, exx);
            }
        
        String dados1[] = new String[servico_vetor.length];

        obj_Servico = new Servico();
        int pos = 0;
        for(int i=0; i < servico_vetor.length; i++){            
            obj_Servico = (Servico)servico_vetor[i];
            dados1[i] = String.valueOf(obj_Servico.getNome());
            if(i==0){servico_id.setText(String.valueOf(obj_Servico.getServico_id()));}
        }
        combo_servico.setModel(new javax.swing.DefaultComboBoxModel(dados1));              
                
        /*****************************************************************/
        
        BD_OrdemServico = new BD_OrdemServico(kernel);
        OrdemServico[] OrdemServico_vetor = null;
        
        if((nome.equals("")) && (cod_id==0)){
            try {
                //VERIFICAR SE É BUSCA OU NÃO
                OrdemServico_vetor = BD_OrdemServico.getOrdemServico();
            } catch (SQLException ex2) {
                Logger.getLogger(CadastrarOS.class.getName()).log(Level.SEVERE, null, ex2);
            }
        }else{            
            try {
                //VERIFICAR SE É BUSCA OU NÃO
                OrdemServico_vetor = BD_OrdemServico.getOrdemServicoNome(nome.toUpperCase(),cod_id);
            } catch (SQLException ex2) {
                Logger.getLogger(CadastrarOS.class.getName()).log(Level.SEVERE, null, ex2);
            }
        }
        
        
        String dados[][] = new String[OrdemServico_vetor.length][10];
        Double valortotal = 0.0;
        OrdemServico objeto = new OrdemServico();
        for(int i=0; i < OrdemServico_vetor.length; i++){
            objeto = (OrdemServico)OrdemServico_vetor[i];
            dados[i][0] = String.valueOf(objeto.getOrdem_servico_id());
            dados[i][1] = String.valueOf(objeto.getCliente().getNome());            
            dados[i][2] = String.valueOf(objeto.getFuncionario().getNome());
            dados[i][3] = String.valueOf(objeto.getServico().getNome());
            dados[i][4] = ((objeto.getStatus()==0)?"Aberto":"Fechado");            
            dados[i][5] = new SimpleDateFormat("dd/MM/yyyy").format(objeto.getData_abertura());            
            dados[i][6] = String.valueOf(new DecimalFormat("#0.00").format(objeto.getEntrada()));
            dados[i][7] = String.valueOf(new DecimalFormat("#0.00").format(objeto.getValor()));
            
            dados[i][editar] = "editar";
            dados[i][excluir] = ((kernel.getFuncionario().getNivel().getNivel_id()==1)?"excluir":"");
        }      
        
      
        
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            dados,
            new String [] {"Cod", "Cliente","Funcionario","Servico","Situação","Data","Entrada(R$)","Valor(R$)","", ""}){
            Class[] types = new Class [] {
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
      
        tabela.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabela.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabela.getColumnModel().getColumn(1).setPreferredWidth(170);
        tabela.getColumnModel().getColumn(2).setPreferredWidth(170);
        tabela.getColumnModel().getColumn(3).setPreferredWidth(170);
        tabela.getColumnModel().getColumn(4).setPreferredWidth(100);
        tabela.getColumnModel().getColumn(5).setPreferredWidth(100); 
        tabela.getColumnModel().getColumn(6).setPreferredWidth(100);
        tabela.getColumnModel().getColumn(7).setPreferredWidth(100);
        tabela.getColumnModel().getColumn(editar).setPreferredWidth(30);        
        tabela.getColumnModel().getColumn(excluir).setPreferredWidth(30);
        
        
        tabela.setDragEnabled(true);
        sp.setViewportView(tabela);        
        //ButtonColumn buttonColumn0 = new ButtonColumn(table, 0);//VER
        ButtonColumnOrdemServico buttonColumnOrdemServico1 = new ButtonColumnOrdemServico(tabela, editar);//EDITAR
        if(kernel.getFuncionario().getNivel().getNivel_id()==1){
            ButtonColumnOrdemServico buttonColumnOrdemServico2 = new ButtonColumnOrdemServico(tabela, excluir);//EXCLUIR
        }
    }

    //CLASSE BUTTONCOLUMN OrdemServico
    class ButtonColumnOrdemServico extends AbstractCellEditor
         implements TableCellRenderer, TableCellEditor, ActionListener
     {
         JTable table;
         JButton renderButton;
         JButton editButton;
         String text;

         public ButtonColumnOrdemServico(JTable table, int column)
         {
             super();
             this.table = table;
             renderButton = new JButton();

             editButton = new JButton();
             
             editButton.setFocusPainted( false );
             editButton.addActionListener( this );

             TableColumnModel columnModel = table.getColumnModel();
             columnModel.getColumn(column).setCellRenderer( this );
             columnModel.getColumn(column).setCellEditor( this );
         }

         public Component getTableCellRendererComponent(
             JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
         {
             if (hasFocus)
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }
             else if (isSelected)
             {
                 renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
             else
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }

             renderButton.setBackground(new java.awt.Color(255, 255, 255));
             renderButton.setBorder(null);
             renderButton.setBorderPainted(false);
             renderButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

             if(value!=""){
             text = (value == null) ? "" : value.toString();
             String imagem1 = text.equals("excluir")?"lixeira":"editar";
             renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem1+".png")));
             }
             return renderButton;
         }

         public Component getTableCellEditorComponent(
             JTable table, Object value, boolean isSelected, int row, int column)
         {
             text = (value == null) ? "" : value.toString();

             String imagem2 = text.equals("excluir")?"lixeira":"editar";
             editButton.setBackground(new java.awt.Color(255, 255, 255));
             editButton.setBorder(null);
             editButton.setBorderPainted(false);             
             editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem2+".png")));
             editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
             //editButton.setText( text );
             return editButton;
         }

         public Object getCellEditorValue()
         {
             return text;
        }

         public void actionPerformed(ActionEvent e)
         {
             fireEditingStopped();

             switch(table.getSelectedColumn()){
                 case excluir:
                     SolicitaConfirmacaoOrdemServico();
                     Tabela("",0);
                 break;
                 case editar:
                     int id_reg = Integer.parseInt(table.getValueAt(table.getSelectedRow(),0).toString());
                     obj_OrdemServico = BD_OrdemServico.getOrdemServicoID(id_reg);
                     campo_nome.setText(obj_OrdemServico.getCliente().getNome());
                     campo_entrada.setText(String.valueOf(new DecimalFormat("#0.00").format(obj_OrdemServico.getEntrada())));
                     campo_valor.setText(String.valueOf(new DecimalFormat("#0.00").format(obj_OrdemServico.getValor())));
                     campo_restante.setText(String.valueOf(new DecimalFormat("#0.00").format(obj_OrdemServico.getRestante())));
                     campo_descricao.setText(obj_OrdemServico.getDescricao());
                     campo_referencia.setText(obj_OrdemServico.getReferencia());
                     campo_funcionario.setText(obj_OrdemServico.getFuncionario().getNome());
                     campo_formapagamento.setText(obj_OrdemServico.getFormapagamento());
                     campo_modelo.setText(obj_OrdemServico.getModelo());
                     campo_produto.setText(obj_OrdemServico.getProduto());
                     //campo_observacao.setText(obj_OrdemServico.getObservacao());
                     
                     String strdata = new SimpleDateFormat("dd/MM/yyyy").format(obj_OrdemServico.getData_entrega());
                     String vet[] = strdata.split("/");
                     
                     campo_dia.setText(vet[0]);
                     campo_mes.setText(vet[1]);
                     campo_ano.setText(vet[2]);
                     
                     String strdata1 = new SimpleDateFormat("dd/MM/yyyy").format(obj_OrdemServico.getData_abertura());
                     String vet1[] = strdata1.split("/");
                     
                     campo_dia1.setText(vet1[0]);
                     campo_mes1.setText(vet1[1]);
                     campo_ano1.setText(vet1[2]);
                     
                     combo_servico.setSelectedItem((Object)obj_OrdemServico.getServico().getNome());
                     
                     campo_situacao.setSelectedIndex((obj_OrdemServico.getStatus()==0)?0:1);
                     cliente_id.setText(String.valueOf(obj_OrdemServico.getCliente().getCliente_id()));
                     ordem_servico_id.setText(String.valueOf(obj_OrdemServico.getOrdem_servico_id()));
                     botao_imprimir.setEnabled(true);
//                     botao_imprimir_termal.setEnabled(true);
                 break;
                 default:
                     kernel.Tela(0, kernel, 0,null,null);
                 break;
             }
             //System.out.println( "DADOS : " + table.getSelectedRow()+" "+" "+table.getSelectedColumn()+" "+table.getColumnCount()+" "+table.getValueAt(table.getSelectedRow(),0));
             
         }
     }
    private void SolicitaConfirmacaoOrdemServico(){
     boolean escolha = false;

     Object[] options = {"Sim",
                    "Não"};
    int resposta = JOptionPane.showOptionDialog(this,
        "Desejas excluir o registro ?",
        "Exclusão",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE,
        null,     //do not use a custom Icon
        options,  //the titles of buttons
        options[1]);
     
     if (resposta == 0) {
       BD_OrdemServico.Excluir(Integer.parseInt(tabela.getValueAt(tabela.getSelectedRow(),0).toString()));
     }
     
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Calcular;
    private javax.swing.JLabel Cliente_id;
    private javax.swing.JLabel Contaspagar_id;
    private javax.swing.JButton botao_imprimir;
    private javax.swing.JButton busca;
    private javax.swing.JButton buscar_cliente;
    private javax.swing.JTextField campo_ano;
    private javax.swing.JTextField campo_ano1;
    private javax.swing.JTextField campo_cliente;
    private javax.swing.JTextArea campo_descricao;
    private javax.swing.JTextField campo_dia;
    private javax.swing.JTextField campo_dia1;
    private javax.swing.JTextField campo_entrada;
    private javax.swing.JTextField campo_formapagamento;
    private javax.swing.JTextField campo_funcionario;
    private javax.swing.JTextField campo_mes;
    private javax.swing.JTextField campo_mes1;
    private javax.swing.JTextField campo_modelo;
    private javax.swing.JTextField campo_nome;
    private javax.swing.JTextField campo_produto;
    private javax.swing.JTextField campo_referencia;
    private javax.swing.JTextField campo_restante;
    private javax.swing.JComboBox campo_situacao;
    private javax.swing.JTextField campo_valor;
    private javax.swing.JLabel cliente_id;
    private javax.swing.JTextField cod_cliente;
    private javax.swing.JComboBox combo_servico;
    private javax.swing.JLabel funcionario_id;
    private javax.swing.JButton getdata;
    private javax.swing.JButton getdataabertura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel ordem_servico_id;
    private javax.swing.JPanel painel_cadastrar_area3;
    private javax.swing.JPanel painel_cadastrar_area4;
    private javax.swing.JButton salvar_Categoria;
    private javax.swing.JLabel servico_id;
    private javax.swing.JScrollPane sp;
    private javax.swing.JTable tabela;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables

}
