/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastrarVendas.java
 *
 * Created on 18/05/2011, 10:08:26
 */
package telas;

import banco.BD_Cartoes;
import banco.BD_Clientes;
import banco.BD_Contasreceber;
import banco.BD_ItemProduto;
import banco.BD_Parcelas;
import banco.BD_Produtos;
import banco.BD_Vendas;
import impressao.Imprimir_Vendas;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Vector;
import objetos.Cartoes;
import objetos.Cliente;
import objetos.Contasreceber;
import objetos.Funcionario;
import objetos.ItemProduto;
import objetos.Kernel;
import objetos.Parcelas;
import objetos.Produtos;import objetos.Vendas;
/**
 *
 * @author vagnerfeijomendes
 */
public class FinalizarVendas extends javax.swing.JPanel {

    private Kernel          kernel      = null; 
    private BD_Produtos     bd_Produto  = null;
    private BD_Parcelas     bd_Parcelas = null;
    private BD_Cartoes      bd_Cartoes  = null;
    private BD_Clientes     bd_Clientes = null;
    private BD_Contasreceber bd_Contasreceber = null;
    private BD_ItemProduto  bd_ItemProduto = null;
    private BD_Vendas       bd_Vendas   = null;    
    private Produtos        obj_Produtos= null;    
    private Cliente         obj_Cliente = null;    
    private Funcionario     obj_Funcionario = null;
    private Contasreceber   obj_Contasreceber = null;    
    private Cartoes         obj_Cartoes = null;    
    private Parcelas        obj_Parcelas = null;    
    private ItemProduto     obj_ItemProduto = null;   
    private Vendas          obj_Vendas  = null; 
    private Imprimir_Vendas   imprimir    = null;
    private final int       selecionar  = 4;
    private final int       excluir     = 4;
    private static int      contador    = 0;
    private int             acao;
    private Object          objeto      = null;
    private String          vetor[][]   = new String[1000][3];
    private Vector          vetorItem   = new Vector();    
    private DecimalFormat fmt = new DecimalFormat("#0.00");
    /** Creates new form CadastrarVendas */
    public FinalizarVendas(Kernel obj,int acao,Object texto) {
        this.kernel = obj;
        this.acao   = acao;
        vetorItem = (Vector)texto;
        initComponents();            
        
        bd_Produto  = new BD_Produtos(kernel);  
        bd_Clientes = new BD_Clientes(kernel);
        bd_Vendas   = new BD_Vendas(kernel);
        bd_Parcelas = new BD_Parcelas(kernel);
        bd_Cartoes  = new BD_Cartoes(kernel);
        imprimir    = new Imprimir_Vendas(kernel);
        bd_Contasreceber = new BD_Contasreceber(kernel);
        bd_ItemProduto = new BD_ItemProduto(kernel);
        salvar.setEnabled(false);       
        
//      String string = fmt.format(precoDouble);

        
        if(vetorItem!=null){
            MontarTabelaPedido();
        }
        if(acao!=0){
            obj_Cliente = bd_Clientes.getClienteID(acao);
            Cliente_id.setText(String.valueOf(obj_Cliente.getCliente_id()));
            campo_cliente.setText(obj_Cliente.getNome());
            salvar.setEnabled(true);            
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel_cadastrar_area3 = new javax.swing.JPanel();
        voltar = new javax.swing.JButton();
        Cliente_id = new javax.swing.JLabel();
        Cartoes_id = new javax.swing.JLabel();
        Parcelas_id = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        campo_cliente = new javax.swing.JTextField();
        busca_cliente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        campo_valor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        campo_desconto = new javax.swing.JTextField();
        campo_venda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        salvar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        combo_Parcelas = new javax.swing.JComboBox();
        combo_Cartoes = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        sp2 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela_carrinho = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 204));
        setForeground(new java.awt.Color(204, 204, 204));

        painel_cadastrar_area3.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        painel_cadastrar_area3.setForeground(new java.awt.Color(204, 204, 204));

        voltar.setBackground(new java.awt.Color(255, 241, 88));
        voltar.setForeground(new java.awt.Color(255, 241, 88));
        voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/back.png"))); // NOI18N
        voltar.setToolTipText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        Cliente_id.setBackground(new java.awt.Color(255, 241, 88));
        Cliente_id.setForeground(new java.awt.Color(255, 241, 88));
        Cliente_id.setText("0");

        Cartoes_id.setBackground(new java.awt.Color(255, 241, 88));
        Cartoes_id.setForeground(new java.awt.Color(255, 241, 88));
        Cartoes_id.setText("0");

        Parcelas_id.setBackground(new java.awt.Color(255, 241, 88));
        Parcelas_id.setForeground(new java.awt.Color(255, 241, 88));
        Parcelas_id.setText("0");

        jLabel34.setText("Voltar");

        org.jdesktop.layout.GroupLayout painel_cadastrar_area3Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area3);
        painel_cadastrar_area3.setLayout(painel_cadastrar_area3Layout);
        painel_cadastrar_area3Layout.setHorizontalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .addContainerGap()
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(voltar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jLabel34)))
                .add(207, 207, 207)
                .add(Cliente_id)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(Cartoes_id)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(Parcelas_id)
                .addContainerGap(806, Short.MAX_VALUE))
        );
        painel_cadastrar_area3Layout.setVerticalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(Cliente_id)
                    .add(Cartoes_id)
                    .add(Parcelas_id))
                .addContainerGap())
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .add(voltar)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel34))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Finalizar pedido"));
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("Cliente:");

        busca_cliente.setText("Busca cliente");
        busca_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busca_clienteActionPerformed(evt);
            }
        });

        jLabel2.setText("Valor(R$):");

        jLabel3.setText("Desconto(R$):");

        campo_desconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_descontoKeyPressed(evt);
            }
        });

        campo_venda.setEditable(false);

        jLabel4.setText("Total(R$):");

        salvar.setText("Fechar venda");
        salvar.setToolTipText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        jLabel5.setText("Cartão:");

        jLabel6.setText("Parcelas:");

        combo_Parcelas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_Parcelas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_ParcelasItemStateChanged(evt);
            }
        });

        combo_Cartoes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_Cartoes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_CartoesItemStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(salvar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 166, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel3)
                            .add(jLabel2)
                            .add(jLabel1)
                            .add(jLabel4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(campo_cliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 267, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(busca_cliente))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, campo_venda)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, campo_desconto)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, campo_valor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel6)
                                    .add(jLabel5))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(combo_Parcelas, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(combo_Cartoes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(campo_cliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(busca_cliente))
                .add(1, 1, 1)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(campo_valor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5)
                    .add(combo_Cartoes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(campo_desconto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(combo_Parcelas, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(campo_venda, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(salvar)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Carrinho"));
        jPanel2.setForeground(new java.awt.Color(204, 204, 204));

        tabela_carrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "Quantidade", "Valor", ""
            }
        ));
        jScrollPane2.setViewportView(tabela_carrinho);

        sp2.setViewportView(jScrollPane2);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sp2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sp2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        kernel.Tela(18,kernel,0,null,null);
}//GEN-LAST:event_voltarActionPerformed
    
    private void busca_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busca_clienteActionPerformed
        // TODO add your handling code here:
        kernel.Tela(21,kernel,0,vetorItem,null);
    }//GEN-LAST:event_busca_clienteActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        // TODO add your handling code here:        
        Salvar();
}//GEN-LAST:event_salvarActionPerformed

    private void campo_descontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_descontoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            campo_venda.setText(fmt.format(Double.parseDouble(campo_valor.getText().replace(",", "."))-Double.parseDouble(campo_desconto.getText().replace(",", "."))));
        }        
    }//GEN-LAST:event_campo_descontoKeyPressed

    private void combo_ParcelasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_ParcelasItemStateChanged
        // TODO add your handling code here:
        Parcelas_id.setText(String.valueOf(bd_Parcelas.getParcelasIDNome((String)combo_Parcelas.getSelectedItem())));
        campo_venda.setText(fmt.format((Double.parseDouble(campo_valor.getText().replace(",", "."))-Double.parseDouble(campo_desconto.getText().replace(",", ".")))/(Integer.parseInt(String.valueOf(bd_Parcelas.getParcelasIDNome((String)combo_Parcelas.getSelectedItem()))))));
}//GEN-LAST:event_combo_ParcelasItemStateChanged

    private void combo_CartoesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_CartoesItemStateChanged
        // TODO add your handling code here:
        Cartoes_id.setText(String.valueOf(bd_Cartoes.getCartoesIDNome((String)combo_Cartoes.getSelectedItem())));
    }//GEN-LAST:event_combo_CartoesItemStateChanged

    //produtos venda
    public void MontarTabelaPedido() {
            Double total = 0.0;
            String dados1[][] = new String[vetorItem.size()][6];
            for(int i=0; i< vetorItem.size();i++){                
                String vet[] = vetorItem.get(i).toString().split("-");
                try {
                obj_Produtos = bd_Produto.getProdutosID(Integer.parseInt(vet[0]));
                } catch (SQLException ex) {
                    Logger.getLogger(FinalizarVendas.class.getName()).log(Level.SEVERE, null, ex);
                }
                dados1[i][0] = String.valueOf(obj_Produtos.getProdutos_id());
                dados1[i][1] = String.valueOf(obj_Produtos.getNome());                  
                dados1[i][2] = vet[1];
                dados1[i][3] = fmt.format(((Double.parseDouble(vet[1]))*((obj_Produtos.getIndice()!=0.0)?((obj_Produtos.getIndice())*(obj_Produtos.getPeso())):((obj_Produtos.getPreco_promocional()!=0.0)?obj_Produtos.getPreco_promocional():obj_Produtos.getPreco_venda())))*((obj_Produtos.getIndice()!=0.0)?2:1));
                dados1[i][excluir] = "excluir";          
                total += ((Double.parseDouble(vet[1]))*((obj_Produtos.getIndice()!=0.0)?((obj_Produtos.getIndice())*(obj_Produtos.getPeso())):((obj_Produtos.getPreco_promocional()!=0.0)?obj_Produtos.getPreco_promocional():obj_Produtos.getPreco_venda())))*((obj_Produtos.getIndice()!=0.0)?2:1);
            }
            
            campo_valor.setText(fmt.format(total));
            campo_desconto.setText("0,00");
            campo_venda.setText(fmt.format(total));
            
            tabela_carrinho.setModel(new javax.swing.table.DefaultTableModel(
            dados1,
            new String [] {"Cod", "Nome","Quantidade","Preço",""}){
            Class[] types = new Class [] {
                java.lang.String.class,java.lang.String.class,java.lang.String.class,
                java.lang.String.class,java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
      
        tabela_carrinho.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabela_carrinho.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabela_carrinho.getColumnModel().getColumn(1).setPreferredWidth(250);        
        tabela_carrinho.getColumnModel().getColumn(2).setPreferredWidth(80);
        tabela_carrinho.getColumnModel().getColumn(3).setPreferredWidth(80);
        tabela_carrinho.getColumnModel().getColumn(excluir).setPreferredWidth(30);
        
        tabela_carrinho.setDragEnabled(true);
        sp2.setViewportView(tabela_carrinho);        
        //ButtonColumn buttonColumn0 = new ButtonColumn(table, 0);//VER
        ButtonColumnProdutos buttonColumnProdutos = new ButtonColumnProdutos(tabela_carrinho, excluir);//EDITAR           
        
        /********* PREENCHENDO O VETOR Cartoes *************/        
        Cartoes[] Cartoes_vetor = null;
        try {
                Cartoes_vetor = bd_Cartoes.getCartoes();
            } catch (SQLException exx) {
                Logger.getLogger(FinalizarVendas.class.getName()).log(Level.SEVERE, null, exx);
            }
        String dados2[] = new String[(Cartoes_vetor.length)+1];

        
        obj_Cartoes = new Cartoes();
        int pos = 0;
        for(int i=0; i < Cartoes_vetor.length; i++){
            obj_Cartoes = (Cartoes)Cartoes_vetor[i];
            if(i==0){
                dados2[i] = "Escolha";
                Cartoes_id.setText(String.valueOf(0));
            }
            /*
            if(acao==obj_Cartoes.getCartoes_id()){             
              Cartoes_id.setText(String.valueOf(obj_Cartoes.getCartoes_id()));                                                        
            } 
             * 
             */
            dados2[i+1] = String.valueOf(obj_Cartoes.getNome()).toUpperCase();            
        }
        
        combo_Cartoes.setModel(new javax.swing.DefaultComboBoxModel(dados2));        
        
        if(acao!=0){
            combo_Cartoes.setSelectedIndex(pos);
        }       
        /*****************************************************************/
        /********* PREENCHENDO O VETOR Parcelas *************/        
        Parcelas[] Parcelas_vetor = null;
        try {
                Parcelas_vetor = bd_Parcelas.getParcelas();
            } catch (SQLException exx) {
                Logger.getLogger(FinalizarVendas.class.getName()).log(Level.SEVERE, null, exx);
            }
        String dados3[] = new String[(Parcelas_vetor.length)+1];

        
        obj_Parcelas = new Parcelas();
        pos = 0;
        for(int i=0; i < Parcelas_vetor.length; i++){
            obj_Parcelas = (Parcelas)Parcelas_vetor[i];
            if(i==0){
                dados3[i] = "Escolha";
                Parcelas_id.setText(String.valueOf(0));
            }
            /*
            if(acao==obj_Parcelas.getParcelas_id()){
              Parcelas_id.setText(String.valueOf(obj_Parcelas.getParcelas_id()));                                                        
            } 
             * 
             */
            dados3[i+1] = String.valueOf(obj_Parcelas.getNome()).toUpperCase();            
        }
        
        combo_Parcelas.setModel(new javax.swing.DefaultComboBoxModel(dados3));        
        
        if(acao!=0){
            combo_Parcelas.setSelectedIndex(pos);
        }       
        /*****************************************************************/
        
        }

    private void Salvar() {
        
        obj_Vendas = new Vendas();
        obj_Cliente= new Cliente();
        obj_Cartoes= new Cartoes();
        obj_Parcelas= new Parcelas();
        obj_ItemProduto = new ItemProduto();
        
        
        obj_Cliente.setCliente_id(Integer.parseInt(Cliente_id.getText()));
        
        if(Integer.parseInt(Parcelas_id.getText())!=0){
            obj_Cartoes.setCartoes_id(Integer.parseInt(Cartoes_id.getText()));
            obj_Parcelas.setParcelas_id(Integer.parseInt(Parcelas_id.getText()));
            obj_Vendas.setCartoes(obj_Cartoes);
            obj_Vendas.setParcelas(obj_Parcelas);
        }
        
        obj_Funcionario = kernel.getFuncionario();
        
        obj_Vendas.setFuncionario(obj_Funcionario);                
        obj_Vendas.setData(new Date());
        obj_Vendas.setHora(new Date());
        obj_Vendas.setCliente(obj_Cliente);
        obj_Vendas.setPreco(Double.parseDouble(campo_valor.getText().replace(",", ".")));
        obj_Vendas.setDesconto(Double.parseDouble(campo_desconto.getText().replace(",", ".")));
        obj_Vendas.setPreco_venda(Double.parseDouble(campo_venda.getText().replace(",", ".")));
        
        int venda_id = bd_Vendas.SalvarGetID(obj_Vendas);
        if(Integer.parseInt(Parcelas_id.getText())!=0){ CadastrarParcelas(venda_id);}
        
        for(int i=0; i < vetorItem.size();i++){
            obj_ItemProduto = new ItemProduto();
            obj_Vendas = new Vendas();
            
            String vet[] = vetorItem.get(i).toString().split("-");
            
            obj_ItemProduto.setQuantidade(Double.parseDouble(vet[1].trim()));
            obj_Produtos.setProdutos_id(Integer.parseInt(vet[0].trim()));            
            obj_ItemProduto.setProdutos(obj_Produtos);
            
            obj_Vendas.setVendas_id(venda_id);
            obj_ItemProduto.setVendas(obj_Vendas);
            try {
                bd_ItemProduto.Salvar(obj_ItemProduto);
                //System.out.println("PRODUTOS: "+vetorItem.get(i).toString());
            } catch (SQLException ex) {
                Logger.getLogger(FinalizarVendas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
            kernel.Tela(18, kernel,0,null,null);
    }

    private void CadastrarParcelas(int venda_id) {
        
        obj_Contasreceber = new Contasreceber();
        obj_Vendas        = new Vendas();
        
        obj_Contasreceber.setStatus(1);
        obj_Contasreceber.setNome("VENDA CLIENTE COD: "+Cliente_id.getText()+" "+campo_cliente.getText());
        
        obj_Vendas.setVendas_id(venda_id);
        obj_Contasreceber.setVendas(obj_Vendas);
        
        int parcelas = (Integer.parseInt(String.valueOf(bd_Parcelas.getParcelasIDNome((String)combo_Parcelas.getSelectedItem()))));
        int dias = 30;
        
        double parcelas_venda = ((Double.parseDouble(campo_valor.getText().replace(",", "."))-Double.parseDouble(campo_desconto.getText().replace(",", ".")))/parcelas);
        obj_Contasreceber.setValor(parcelas_venda);
        
        SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd"); 
        Calendar c = new GregorianCalendar(); 
        String datas = "";
        sd.format(c.getTime());
        for(int i=0; i< (parcelas-1); i++){
         c.add(Calendar.MONTH, 1);   
         obj_Contasreceber.setData(c.getTime());
         bd_Contasreceber.SalvarCode(obj_Contasreceber);
        }
    }

/*
    private void Imprimir(int venda_id) {
        System.out.println("IMPRIMIR: "+venda_id);
        try {
            imprimir.ImprimirVenda(venda_id);
        } catch (SQLException ex) {
            Logger.getLogger(FinalizarVendas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
  */  
    
    //CLASSE BUTTONCOLUMN Produtos
    class ButtonColumnProdutos extends AbstractCellEditor
         implements TableCellRenderer, TableCellEditor, ActionListener
     {
         JTable table;
         JButton renderButton;
         JButton editButton;
         String text;

         public ButtonColumnProdutos(JTable table, int column)
         {
             super();
             this.table = table;
             renderButton = new JButton();

             editButton = new JButton();
             
             editButton.setFocusPainted( false );
             editButton.addActionListener( this );

             TableColumnModel columnModel = table.getColumnModel();
             columnModel.getColumn(column).setCellRenderer( this );
             columnModel.getColumn(column).setCellEditor( this );
         }

         public Component getTableCellRendererComponent(
             JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
         {
             if (hasFocus)
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }
             else if (isSelected)
             {
                 renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
             else
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }

             renderButton.setBackground(new java.awt.Color(255, 255, 255));
             renderButton.setBorder(null);
             renderButton.setBorderPainted(false);
             renderButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

             text = (value == null) ? "" : value.toString();
             String imagem1 = text.equals("excluir")?"lixeira":"editar";
             renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem1+".png")));
             return renderButton;
         }

         public Component getTableCellEditorComponent(
             JTable table, Object value, boolean isSelected, int row, int column)
         {
             text = (value == null) ? "" : value.toString();             
             String imagem2 = text.equals("excluir")?"lixeira":"editar";
             editButton.setBackground(new java.awt.Color(255, 255, 255));
             editButton.setBorder(null);
             editButton.setBorderPainted(false);             
             editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem2+".png")));
             editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
             //editButton.setText( text );
             return editButton;
         }

         public Object getCellEditorValue()
         {
             return text;
        }

         public void actionPerformed(ActionEvent e)
         {
             fireEditingStopped();

             switch(table.getSelectedColumn()){
                 case excluir:
                     SolicitaConfirmacao();
                 break;
                 default:
                     kernel.Tela(0, kernel, 0,null,null);
                 break;
             }
             
         }
     }
    private void SolicitaConfirmacao(){
     boolean escolha = false;

     Object[] options = {"Sim",
                    "Não"};
    int resposta = JOptionPane.showOptionDialog(this,
        "Desejas excluir o registro ?",
        "Exclusão",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE,
        null,     //do not use a custom Icon
        options,  //the titles of buttons
        options[1]);
     
     if (resposta == 0) {
       
         vetorItem.remove(tabela_carrinho.getValueAt(tabela_carrinho.getSelectedRow(),0).toString()+"-"+
                        tabela_carrinho.getValueAt(tabela_carrinho.getSelectedRow(),2).toString());       
         MontarTabelaPedido();
     }
     
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Cartoes_id;
    private javax.swing.JLabel Cliente_id;
    private javax.swing.JLabel Parcelas_id;
    private javax.swing.JButton busca_cliente;
    private javax.swing.JTextField campo_cliente;
    private javax.swing.JTextField campo_desconto;
    private javax.swing.JTextField campo_valor;
    private javax.swing.JTextField campo_venda;
    private javax.swing.JComboBox combo_Cartoes;
    private javax.swing.JComboBox combo_Parcelas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel painel_cadastrar_area3;
    private javax.swing.JButton salvar;
    private javax.swing.JScrollPane sp2;
    private javax.swing.JTable tabela_carrinho;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables

}
