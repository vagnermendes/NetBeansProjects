/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImportarArquivos.java
 *
 * Created on 27/04/2011, 13:43:07
 */

package telas;

import banco.BD_Area;
import banco.BD_Status;
import banco.BD_Censo;
import banco.BD_Data;
import banco.BD_Especie;
import banco.BD_Sexo;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import objetos.Area;
import objetos.Status;
import objetos.Data;
import objetos.Especie;
import objetos.Kernel;
import objetos.Sexo;

/**
 *
 * @author vagnerfeijomendes
 */
public class ImportarArquivosCenso extends javax.swing.JPanel {
    
    private Kernel           kernel         = null;   
    private DefaultListModel lista          = new DefaultListModel();
    private FileReader reader               = null;
    private BD_Data    bd_Data              = null;
    private BD_Area    bd_Area              = null;
    private BD_Especie bd_Especie           = null;
    private BD_Sexo    bd_Sexo              = null;
    private BD_Censo   bd_Censo             = null;       
    private BD_Status  bd_Status            = null;
    private static File arquivo             = null;  
    private Especie         obj_Especie     = null;
    private Status          obj_Status      = null;
    private Area            obj_Area        = null;
    private Data            obj_Data        = null;
    private Sexo            obj_Sexo        = null;        
    private int             acao;
    /** Creates new form ImportarArquivos */
    public ImportarArquivosCenso(Kernel obj,int acao,Object texto) {
        this.kernel = obj;
        initComponents();   
        PreencherFormulario();        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel_cadastrar_area = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela_colunas = new javax.swing.JList();
        botao_importar = new javax.swing.JButton();
        selecionar_arquivo = new javax.swing.JButton();
        combo_Especie = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        combo_Sexo = new javax.swing.JComboBox();
        combo_Status = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        Sexo_id = new javax.swing.JLabel();
        Status_id = new javax.swing.JLabel();
        Especie_id = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        conteudo_arquivo = new javax.swing.JTextArea();
        painel_cadastrar_area9 = new javax.swing.JPanel();
        voltar = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        painel_cadastrar_area.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Importador de dados"));

        jLabel1.setText("Selecione o arquivo:");

        jLabel5.setText("Colunas do arquivo");

        jScrollPane2.setViewportView(tabela_colunas);

        botao_importar.setText("Importar");
        botao_importar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_importarActionPerformed(evt);
            }
        });

        selecionar_arquivo.setText("Arquivo");
        selecionar_arquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionar_arquivoActionPerformed(evt);
            }
        });

        combo_Especie.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_Especie.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_EspecieItemStateChanged(evt);
            }
        });

        jLabel3.setText("Espécies:");

        jLabel6.setText("Sexo:");

        combo_Sexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_Sexo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_SexoItemStateChanged(evt);
            }
        });

        combo_Status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_Status.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_StatusItemStateChanged(evt);
            }
        });

        jLabel8.setText("Situação:");

        Sexo_id.setForeground(new java.awt.Color(204, 204, 204));
        Sexo_id.setText("0");

        Status_id.setForeground(new java.awt.Color(204, 204, 204));
        Status_id.setText("0");

        Especie_id.setBackground(new java.awt.Color(0, 0, 0));
        Especie_id.setForeground(new java.awt.Color(204, 204, 204));
        Especie_id.setText("0");

        org.jdesktop.layout.GroupLayout painel_cadastrar_areaLayout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area);
        painel_cadastrar_area.setLayout(painel_cadastrar_areaLayout);
        painel_cadastrar_areaLayout.setHorizontalGroup(
            painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_areaLayout.createSequentialGroup()
                .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(botao_importar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(selecionar_arquivo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel5)
                    .add(painel_cadastrar_areaLayout.createSequentialGroup()
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 193, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(painel_cadastrar_areaLayout.createSequentialGroup()
                                .add(6, 6, 6)
                                .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel8)
                                    .add(jLabel6)
                                    .add(painel_cadastrar_areaLayout.createSequentialGroup()
                                        .add(jLabel3)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                                .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(combo_Sexo, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(combo_Status, 0, 165, Short.MAX_VALUE)
                                    .add(combo_Especie, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .add(painel_cadastrar_areaLayout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(Especie_id)
                                .add(5, 5, 5)
                                .add(Status_id)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(Sexo_id, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(417, Short.MAX_VALUE))
        );
        painel_cadastrar_areaLayout.setVerticalGroup(
            painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_areaLayout.createSequentialGroup()
                .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(painel_cadastrar_areaLayout.createSequentialGroup()
                        .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(combo_Especie, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel3))
                        .add(6, 6, 6)
                        .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(combo_Sexo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(combo_Status, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel8))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(Especie_id)
                            .add(Status_id)
                            .add(Sexo_id)))
                    .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(painel_cadastrar_areaLayout.createSequentialGroup()
                            .add(selecionar_arquivo)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(botao_importar))
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados no arquivo"));

        conteudo_arquivo.setColumns(20);
        conteudo_arquivo.setRows(5);
        jScrollPane3.setViewportView(conteudo_arquivo);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 937, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
        );

        painel_cadastrar_area9.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        voltar.setBackground(new java.awt.Color(204, 204, 204));
        voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/back.png"))); // NOI18N
        voltar.setToolTipText("Voltar");
        voltar.setBorder(null);
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout painel_cadastrar_area9Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area9);
        painel_cadastrar_area9.setLayout(painel_cadastrar_area9Layout);
        painel_cadastrar_area9Layout.setHorizontalGroup(
            painel_cadastrar_area9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area9Layout.createSequentialGroup()
                .add(voltar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 885, Short.MAX_VALUE))
        );
        painel_cadastrar_area9Layout.setVerticalGroup(
            painel_cadastrar_area9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(voltar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(painel_cadastrar_area9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(painel_cadastrar_area, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(painel_cadastrar_area9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 157, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void selecionar_arquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionar_arquivoActionPerformed
        // TODO add your handling code here:
        String imagens[]; 
        JFileChooser fc = new JFileChooser();   
        fc.setMultiSelectionEnabled(true);   
  
        fc.showOpenDialog(this);   
        arquivo = fc.getSelectedFile().getAbsoluteFile();
        if(fc.getSelectedFile()!=null){
            try {               
                
                //LENDO O ARQUIVO                   
                try {
                    reader = new FileReader(arquivo);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ImportarArquivosCenso.class.getName()).log(Level.SEVERE, null, ex);
                }
                BufferedReader leitor = new BufferedReader(reader); 
                String linha = "";   
                String texto = "";
                int pos=1;
                
                while(leitor.ready()) {   
                    linha = leitor.readLine();                    
                    if(pos==1){ preencherTabelaColunas(linha.toUpperCase());}
                    String ln = "Linha "+pos+++": "+linha+"\n";                                        
                    texto += ln;
                } 
                conteudo_arquivo.setText(texto);                
                leitor.close();
            } catch (IOException ex) {
                Logger.getLogger(ImportarArquivosCenso.class.getName()).log(Level.SEVERE, null, ex);
            }
        }        
    }//GEN-LAST:event_selecionar_arquivoActionPerformed

    private void botao_importarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_importarActionPerformed
        // TODO add your handling code here:
        String txt = "Importando....\n\n";        
        try {
            ImportarDados(tabela_colunas.getSelectedValue());
        } catch (IOException ex) {
            Logger.getLogger(ImportarArquivosCenso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ImportarArquivosCenso.class.getName()).log(Level.SEVERE, null, ex);
        }
        txt += tabela_colunas.getSelectedValue()+"\t [ok] \n ";   
        txt += "Importação encerrada com sucesso.";           
        conteudo_arquivo.setText(txt);
    }//GEN-LAST:event_botao_importarActionPerformed

    private void combo_EspecieItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_EspecieItemStateChanged
        // TODO add your handling code here:
        Especie_id.setText(String.valueOf(bd_Especie.getEspecieIDNome((String)combo_Especie.getSelectedItem())));
}//GEN-LAST:event_combo_EspecieItemStateChanged

    private void combo_SexoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_SexoItemStateChanged
        // TODO add your handling code here:
        Sexo_id.setText(String.valueOf(bd_Sexo.getSexoIDNome((String)combo_Sexo.getSelectedItem())));
}//GEN-LAST:event_combo_SexoItemStateChanged

    private void combo_StatusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_StatusItemStateChanged
        // TODO add your handling code here:
        Status_id.setText(String.valueOf(bd_Status.getStatusIDNome((String)combo_Status.getSelectedItem())));
}//GEN-LAST:event_combo_StatusItemStateChanged

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        kernel.Tela(37, kernel, 0, null, null);
    }//GEN-LAST:event_voltarActionPerformed
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Especie_id;
    private javax.swing.JLabel Sexo_id;
    private javax.swing.JLabel Status_id;
    private javax.swing.JButton botao_importar;
    private javax.swing.JComboBox combo_Especie;
    private javax.swing.JComboBox combo_Sexo;
    private javax.swing.JComboBox combo_Status;
    private javax.swing.JTextArea conteudo_arquivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel painel_cadastrar_area;
    private javax.swing.JPanel painel_cadastrar_area9;
    private javax.swing.JButton selecionar_arquivo;
    private javax.swing.JList tabela_colunas;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables

    private void preencherTabelaColunas(final String linha) {
        tabela_colunas.setModel(new javax.swing.AbstractListModel() {
            String []strings = linha.split(";");            
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });       
    }

    private void ImportarDados(Object obj) throws IOException, SQLException {
        String coluna = (String)obj;  
        if(coluna.toUpperCase()!=null){        
        //LENDO O ARQUIVO 
        reader = new FileReader(arquivo);
        BufferedReader leitor = new BufferedReader(reader); 
        String linha = "";   
        String texto = "";
        String vetortitulocoluna[]  = null;
        String vetorlinhadados[]    = null;
        
        int pos=0;
        int posicaocoluna=0;
        while(leitor.ready()) {   
            linha = leitor.readLine();                    
            //COLETANDO A POSIÇÃO DA COLUNA PARA COLETAR OS DADOS 
            if(pos==0){ 
                vetortitulocoluna = linha.toUpperCase().split(";");
                for(int j=0; j < vetortitulocoluna.length; j++){
                    if(coluna.trim().toUpperCase().equals(vetortitulocoluna[j].trim()))
                        posicaocoluna = j;                    
                }                
            }
            if(pos!=0){
                //COLENTADO OS DADOS DAS OUTRAS LINHAS NA COLUNA DESEJADA
                vetorlinhadados = linha.toUpperCase().split(";");            
                for(int j=0; j < vetorlinhadados.length; j++){   
                   // System.out.println(vetorlinhadados[j]+" "+vetorlinhadados[0]+" "+vetorlinhadados[1]);
                   if(j==posicaocoluna){ InserirDadoTabela(vetorlinhadados[j],vetorlinhadados[0],vetorlinhadados[1]);}                    
                }
            }
            pos++;
        }
        }
    }

    private void InserirDadoTabela(String valor,String data, String area) throws SQLException {
        //PEGAR A ESPECIE, Status, DATA, AREA, SEXO        
        //BUSCANDO AREA
        if(!valor.equals("")){
            int area_id         = bd_Area.getAreaIDNome(area);
            int data_id         = bd_Data.getDataIDNome(data);
            int especie_id      = Integer.parseInt(Especie_id.getText());
            int status_id       = Integer.parseInt(Status_id.getText());
            int sexo_id         = Integer.parseInt(Sexo_id.getText());        
            int quantidade      = Integer.parseInt(valor);        
            bd_Censo.Importar(especie_id,status_id,sexo_id,data_id,area_id,quantidade);
        }
    }

    private void PreencherFormulario() {
        bd_Area      = new BD_Area(kernel);
        bd_Especie   = new BD_Especie(kernel);
        bd_Status = new BD_Status(kernel);
        bd_Sexo      = new BD_Sexo(kernel);
        bd_Data      = new BD_Data(kernel);
        bd_Censo     = new BD_Censo(kernel);
        /********* PREENCHENDO O VETOR Especie *************/        
        Especie[] Especie_vetor = null;
        try {
                Especie_vetor = bd_Especie.getEspecies();
            } catch (SQLException exx) {
                Logger.getLogger(CadastrarCenso.class.getName()).log(Level.SEVERE, null, exx);
            }
        String dados1[] = new String[(Especie_vetor.length)+1];

        
        obj_Especie = new Especie();
        int pos = 0;
        for(int i=0; i < Especie_vetor.length; i++){
            obj_Especie = (Especie)Especie_vetor[i];
            if(i==0){
                dados1[i] = "Escolha";
                Especie_id.setText(String.valueOf(0));
            }
            if(acao==obj_Especie.getEspecie_id()){
              Especie_id.setText(String.valueOf(obj_Especie.getEspecie_id()));                                                        
            }           
            dados1[i+1] = String.valueOf(obj_Especie.getNome()).toUpperCase();            
        }
        
        combo_Especie.setModel(new javax.swing.DefaultComboBoxModel(dados1));        
        
        if(acao!=0){
            combo_Especie.setSelectedIndex(pos);
        }       
        /*****************************************************************/
        /********* PREENCHENDO O VETOR Status *************/        
        Status[] Status_vetor = null;
        try {
                Status_vetor = bd_Status.getStatuss();
            } catch (SQLException exx) {
                Logger.getLogger(CadastrarCenso.class.getName()).log(Level.SEVERE, null, exx);
            }
        String dados2[] = new String[(Status_vetor.length)+1];

        obj_Status = new Status();
        int pos2 = 0;
        for(int i=0; i < Status_vetor.length; i++){
            obj_Status = (Status)Status_vetor[i];
            if(i==0){
                dados2[i] = "Escolha";
                Status_id.setText(String.valueOf(0));
            }
            if(acao==obj_Status.getStatus_id()){
              Status_id.setText(String.valueOf(obj_Status.getStatus_id()));                                                        
            }           
            dados2[i+1] = String.valueOf(obj_Status.getNome()).toUpperCase(); 
            
        }
        combo_Status.setModel(new javax.swing.DefaultComboBoxModel(dados2));        
        
        if(acao!=0){
            combo_Status.setSelectedIndex(pos2);
        }               
        /*****************************************************************/
        /********* PREENCHENDO O VETOR Sexo *************/   
        Sexo[] Sexo_vetor = null;
        try {
                Sexo_vetor = bd_Sexo.getSexos();
            } catch (SQLException exx) {
                Logger.getLogger(CadastrarCenso.class.getName()).log(Level.SEVERE, null, exx);
            }
        String dados4[] = new String[(Sexo_vetor.length)+1];

        obj_Sexo = new Sexo();
        int pos4 = 0;
        for(int i=0; i < Sexo_vetor.length; i++){
           obj_Sexo = (Sexo)Sexo_vetor[i];
            if(i==0){
                dados4[i] = "Escolha";
                Sexo_id.setText(String.valueOf(0));
            }
            if(acao==obj_Sexo.getSexo_id()){
              Sexo_id.setText(String.valueOf(obj_Sexo.getSexo_id()));                                                        
            }           
            dados4[i+1] = String.valueOf(obj_Sexo.getNome()).toUpperCase(); 
        }
        combo_Sexo.setModel(new javax.swing.DefaultComboBoxModel(dados4));        
        
        if(acao!=0){
            combo_Sexo.setSelectedIndex(pos4);
        }       
        /*****************************************************************/
      
    }  

}