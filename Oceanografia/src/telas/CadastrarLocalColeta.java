/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastrarLocalColeta.java
 *
 * Created on 14/02/2011, 18:44:34
 */

package telas;

import banco.BD_LocalColeta;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import objetos.Kernel;
import objetos.LocalColeta;

/**
 *
 * @author vagner
 */
public class CadastrarLocalColeta extends javax.swing.JPanel {

    private Kernel         kernel;         
    private LocalColeta    obj_LocalColeta;    
    private BD_LocalColeta bd_LocalColeta;
    private Object         objeto;
    private int            acao;
    private final int      editar       = 2;
    private final int      excluir      = 3;    
    private final int      selecionar   = 4;
    
    /** Creates new form CadastrarAnimais */
    public CadastrarLocalColeta(Kernel obj,int acao,Object ob) {        
        this.kernel = obj;
        this.objeto = ob;
        this.acao   = acao;
        initComponents();                
        this.TabelaLocalColeta();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sp = new javax.swing.JScrollPane();
        tabela_LocalColeta = new javax.swing.JTable();
        painel_cadastrar_area3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nome_LocalColeta = new javax.swing.JTextField();
        LocalColeta_id = new javax.swing.JLabel();
        painel_cadastrar_area4 = new javax.swing.JPanel();
        voltar = new javax.swing.JButton();
        salvar_LocalColeta = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        tabela_LocalColeta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Cod", "Nome", "Editar", "Excluir"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_LocalColeta.setDragEnabled(true);
        tabela_LocalColeta.setRowHeight(25);
        tabela_LocalColeta.getTableHeader().setReorderingAllowed(false);
        sp.setViewportView(tabela_LocalColeta);

        painel_cadastrar_area3.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Local Coleta:");

        nome_LocalColeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nome_LocalColetaKeyPressed(evt);
            }
        });

        LocalColeta_id.setForeground(new java.awt.Color(204, 204, 204));
        LocalColeta_id.setText("0");

        org.jdesktop.layout.GroupLayout painel_cadastrar_area3Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area3);
        painel_cadastrar_area3.setLayout(painel_cadastrar_area3Layout);
        painel_cadastrar_area3Layout.setHorizontalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(nome_LocalColeta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 209, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(LocalColeta_id, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );
        painel_cadastrar_area3Layout.setVerticalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .add(25, 25, 25)
                .add(LocalColeta_id))
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .addContainerGap()
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(nome_LocalColeta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        painel_cadastrar_area4.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        voltar.setBackground(new java.awt.Color(204, 204, 204));
        voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/back.png"))); // NOI18N
        voltar.setToolTipText("Voltar");
        voltar.setBorder(null);
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        salvar_LocalColeta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/salvar.png"))); // NOI18N
        salvar_LocalColeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvar_LocalColetaActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout painel_cadastrar_area4Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area4);
        painel_cadastrar_area4.setLayout(painel_cadastrar_area4Layout);
        painel_cadastrar_area4Layout.setHorizontalGroup(
            painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area4Layout.createSequentialGroup()
                .add(salvar_LocalColeta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(voltar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painel_cadastrar_area4Layout.setVerticalGroup(
            painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(voltar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(painel_cadastrar_area4Layout.createSequentialGroup()
                .add(salvar_LocalColeta)
                .add(0, 0, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 180, Short.MAX_VALUE))
                    .add(painel_cadastrar_area4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nome_LocalColetaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nome_LocalColetaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            SalvarLocalColeta();
        }
}//GEN-LAST:event_nome_LocalColetaKeyPressed

    private void salvar_LocalColetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvar_LocalColetaActionPerformed
        // TODO add your handling code here:
        SalvarLocalColeta();
}//GEN-LAST:event_salvar_LocalColetaActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        kernel.Tela(42, kernel, 0, null, null);
    }//GEN-LAST:event_voltarActionPerformed

    //SALVAR LocalColeta
    private void SalvarLocalColeta(){
        obj_LocalColeta     = new LocalColeta();
        bd_LocalColeta  = new BD_LocalColeta(kernel);
        
        if(LocalColeta_id.getText().equals("0")){
            obj_LocalColeta.setNome(nome_LocalColeta.getText());
            if(!nome_LocalColeta.getText().equals("")){
                bd_LocalColeta.Salvar(obj_LocalColeta);
            }
            
        }else{            
            obj_LocalColeta.setNome(nome_LocalColeta.getText());
            obj_LocalColeta.setLocal_coleta_id(Integer.parseInt(LocalColeta_id.getText()));
            bd_LocalColeta.Atualizar(obj_LocalColeta);
        }
        
        nome_LocalColeta.setText(""); 
        LocalColeta_id.setText("0"); 
        //PREENCHER A TABELA DE DADOS COM AS ÁREAS
        TabelaLocalColeta();
    }
    
    //TABELA LocalColeta
    public void TabelaLocalColeta(){
        
        bd_LocalColeta = new BD_LocalColeta(kernel);
        LocalColeta[] LocalColeta_vetor = null;
        try {
            //VERIFICAR SE É BUSCA OU NÃO        
            LocalColeta_vetor = bd_LocalColeta.getLocalColetas();
        } catch (SQLException ex2) {
            Logger.getLogger(CadastrarLocalColeta.class.getName()).log(Level.SEVERE, null, ex2);
        }
        
        
        String dados[][] = new String[LocalColeta_vetor.length][((acao==1)?5:4)];

        LocalColeta esp = new LocalColeta();
        for(int i=0; i < LocalColeta_vetor.length; i++){
            esp = (LocalColeta)LocalColeta_vetor[i];
            dados[i][0] = String.valueOf(esp.getLocal_coleta_id());
            dados[i][1] = String.valueOf(esp.getNome());            
            if(acao==1){                
                dados[i][editar] = "editar";
                if(kernel.getUsuario().getNivel()==0){        
                dados[i][excluir] = "excluir";
                }
                dados[i][selecionar] = "selecionar";
            }else{
                dados[i][editar] = "editar";
                if(kernel.getUsuario().getNivel()==0){        
                dados[i][excluir] = "excluir";
                }
            }
         
        }
      
        
        tabela_LocalColeta.setModel(new javax.swing.table.DefaultTableModel(
            dados,
            ((acao==1)?(new String [] {"Cod", "Nome","","", ""}):(new String [] {"Cod", "Nome","", ""}))){                            
            Class[] types = new Class [] {
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
      
        tabela_LocalColeta.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabela_LocalColeta.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabela_LocalColeta.getColumnModel().getColumn(1).setPreferredWidth(300);        
        
        if(acao==1){
            tabela_LocalColeta.getColumnModel().getColumn(editar).setPreferredWidth(30);
            if(kernel.getUsuario().getNivel()==0){        
            tabela_LocalColeta.getColumnModel().getColumn(excluir).setPreferredWidth(30);
            }
            tabela_LocalColeta.getColumnModel().getColumn(selecionar).setPreferredWidth(30);
        }else{
            tabela_LocalColeta.getColumnModel().getColumn(editar).setPreferredWidth(30);
            if(kernel.getUsuario().getNivel()==0){        
            tabela_LocalColeta.getColumnModel().getColumn(excluir).setPreferredWidth(30);
            }
        }
        
        tabela_LocalColeta.setDragEnabled(true);
        sp.setViewportView(tabela_LocalColeta);        
        //ButtonColumn buttonColumn0 = new ButtonColumn(table, 0);//VER
        if(acao==1){
            ButtonColumnLocalColeta button1 = new ButtonColumnLocalColeta(tabela_LocalColeta, editar);//EDITAR
            if(kernel.getUsuario().getNivel()==0){        
            ButtonColumnLocalColeta button2 = new ButtonColumnLocalColeta(tabela_LocalColeta, excluir);//EDITAR
            }
            ButtonColumnLocalColeta button3 = new ButtonColumnLocalColeta(tabela_LocalColeta, selecionar);//SELECIONAR
        }else{
            ButtonColumnLocalColeta button1 = new ButtonColumnLocalColeta(tabela_LocalColeta, editar);//EDITAR
            if(kernel.getUsuario().getNivel()==0){        
            ButtonColumnLocalColeta button2 = new ButtonColumnLocalColeta(tabela_LocalColeta, excluir);//EXCLUIR
            }
        }
    }

    //CLASSE BUTTONCOLUMN LocalColeta
    class ButtonColumnLocalColeta extends AbstractCellEditor
         implements TableCellRenderer, TableCellEditor, ActionListener
     {
         JTable table;
         JButton renderButton;
         JButton editButton;
         String text;

         public ButtonColumnLocalColeta(JTable table, int column)
         {
             super();
             this.table = table;
             renderButton = new JButton();

             editButton = new JButton();
             
             editButton.setFocusPainted( false );
             editButton.addActionListener( this );

             TableColumnModel columnModel = table.getColumnModel();
             columnModel.getColumn(column).setCellRenderer( this );
             columnModel.getColumn(column).setCellEditor( this );
         }

         public Component getTableCellRendererComponent(
             JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
         {
             if (hasFocus)
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }
             else if (isSelected)
             {
                 renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
             else
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }

             renderButton.setBackground(new java.awt.Color(255, 255, 255));
             renderButton.setBorder(null);
             renderButton.setBorderPainted(false);
             renderButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

             text = (value == null) ? "" : value.toString();
             String imagem1 = "";
             if(text.equals("selecionar")){
                 imagem1 = "select";
             }else{
                 imagem1 = text.equals("excluir")?"lixeira":"editar";
             }
             renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem1+".png")));
             return renderButton;
         }

         public Component getTableCellEditorComponent(
             JTable table, Object value, boolean isSelected, int row, int column)
         {
             text = (value == null) ? "" : value.toString();             
             String imagem2 = text.equals("excluir")?"lixeira":"editar";
             editButton.setBackground(new java.awt.Color(255, 255, 255));
             editButton.setBorder(null);
             editButton.setBorderPainted(false);             
             editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem2+".png")));
             editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
             //editButton.setText( text );
             return editButton;
         }

         public Object getCellEditorValue()
         {
             return text;
        }

         public void actionPerformed(ActionEvent e)
         {
             fireEditingStopped();

             switch(table.getSelectedColumn()){
                 case excluir:
                     SolicitaConfirmacaoLocalColeta();
                     TabelaLocalColeta();
                 break;
                 case editar:
                     int id_reg = Integer.parseInt(table.getValueAt(table.getSelectedRow(),0).toString());
                     obj_LocalColeta = bd_LocalColeta.getLocalColetaID(id_reg);
                     nome_LocalColeta.setText(obj_LocalColeta.getNome());
                     LocalColeta_id.setText(String.valueOf(obj_LocalColeta.getLocal_coleta_id()));
                 break;
                 case selecionar:
                     String vet[] = ((String)objeto).split("-");
                     objeto = Integer.parseInt(table.getValueAt(table.getSelectedRow(),0).toString())+"-"+vet[1]+"-"+vet[2];
                     //System.out.println("OBJETO: "+objeto);
                     kernel.Tela(17, kernel,1,objeto,null);
                     break;
                 default:
                     kernel.Tela(0, kernel, 0,null,null);
                 break;
             }
             //System.out.println( "DADOS : " + table.getSelectedRow()+" "+" "+table.getSelectedColumn()+" "+table.getColumnCount()+" "+table.getValueAt(table.getSelectedRow(),0));
             
         }
     }
    private void SolicitaConfirmacaoLocalColeta(){
     boolean escolha = false;

     Object[] options = {"Sim",
                    "Não"};
    int resposta = JOptionPane.showOptionDialog(this,
        "Desejas excluir o registro ?",
        "Exclusão",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE,
        null,     //do not use a custom Icon
        options,  //the titles of buttons
        options[1]);
     
     if (resposta == 0) {
       bd_LocalColeta.Excluir(Integer.parseInt(tabela_LocalColeta.getValueAt(tabela_LocalColeta.getSelectedRow(),0).toString()));
     }
     
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LocalColeta_id;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nome_LocalColeta;
    private javax.swing.JPanel painel_cadastrar_area3;
    private javax.swing.JPanel painel_cadastrar_area4;
    private javax.swing.JButton salvar_LocalColeta;
    private javax.swing.JScrollPane sp;
    private javax.swing.JTable tabela_LocalColeta;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables

}
