/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImportarArquivos.java
 *
 * Created on 27/04/2011, 13:43:07
 */

package telas;

import banco.BD_Area;
import banco.BD_Categoria;
import banco.BD_Data;
import banco.BD_Especie;
import banco.BD_Sexo;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import objetos.Kernel;

/**
 *
 * @author vagnerfeijomendes
 */
public class ImportarArquivosGerais extends javax.swing.JPanel {
    
    private Kernel           kernel;   
    private DefaultListModel lista      = new DefaultListModel();
    private FileReader reader           = null;
    private BD_Data    bd_Data          = null;
    private BD_Area    bd_Area          = null;
    private BD_Especie bd_Especie       = null;
    private BD_Sexo    bd_Sexo          = null;
    private BD_Categoria bd_Categoria   = null;
    private static File arquivo         = null;
    
    /** Creates new form ImportarArquivos */
    public ImportarArquivosGerais(Kernel obj,int acao,Object texto) {
        this.kernel = obj;
        initComponents();   
        botao_enviar.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel_cadastrar_area = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_banco = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela_colunas = new javax.swing.JList();
        botao_importar = new javax.swing.JButton();
        selecionar_arquivo = new javax.swing.JButton();
        botao_enviar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        botao_remover = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tarefas = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        conteudo_arquivo = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(204, 204, 204));

        painel_cadastrar_area.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Importador de dados"));

        jLabel1.setText("Selecione o arquivo:");

        tabela_banco.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "ANESTESIA", "ANIMAL", "ANIMAL_TAG", "AREA", "BIOQUIMICO", "CARRAPATO", "CATEGORIA", "CENSO", "CENSO_ANIMAL", "CONTAMINANTES", "COR_TAG", "DATA", "EPOCA", "ESPECIE", "GORDURA", "GORDURA_DESTINO", "IDADE", "ISOTOPOS", "LOCAL_COLETA", "MEDICACAO", "PARENTESCO", "RECAPTURA", "SANGUE", "SEXO", "STATUS", "TAG", "TEMPORADA", "TIPORECAPTURA", "CENSO_OBSERVACAO" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(tabela_banco);

        jLabel4.setText("Tabelas do banco");

        jLabel5.setText("Colunas do arquivo");

        jScrollPane2.setViewportView(tabela_colunas);

        botao_importar.setText("Importar");
        botao_importar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_importarActionPerformed(evt);
            }
        });

        selecionar_arquivo.setText("Arquivo");
        selecionar_arquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionar_arquivoActionPerformed(evt);
            }
        });

        botao_enviar.setText(">>");
        botao_enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_enviarActionPerformed(evt);
            }
        });

        jLabel2.setText("Lista de colunas a serem atualizadas");

        botao_remover.setText("Remover");
        botao_remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_removerActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(tarefas);

        org.jdesktop.layout.GroupLayout painel_cadastrar_areaLayout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area);
        painel_cadastrar_area.setLayout(painel_cadastrar_areaLayout);
        painel_cadastrar_areaLayout.setHorizontalGroup(
            painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_areaLayout.createSequentialGroup()
                .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(painel_cadastrar_areaLayout.createSequentialGroup()
                        .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(botao_importar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(selecionar_arquivo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel5)
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 193, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(painel_cadastrar_areaLayout.createSequentialGroup()
                                .add(jLabel4)
                                .add(136, 136, 136)
                                .add(jLabel2))
                            .add(painel_cadastrar_areaLayout.createSequentialGroup()
                                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 215, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 256, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(painel_cadastrar_areaLayout.createSequentialGroup()
                        .add(260, 260, 260)
                        .add(botao_enviar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(235, 235, 235)
                        .add(botao_remover)))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        painel_cadastrar_areaLayout.setVerticalGroup(
            painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_areaLayout.createSequentialGroup()
                .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jLabel4)
                    .add(jLabel5)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jScrollPane4, 0, 0, Short.MAX_VALUE)
                    .add(painel_cadastrar_areaLayout.createSequentialGroup()
                        .add(selecionar_arquivo)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(botao_importar))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .add(jScrollPane1, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_areaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(botao_enviar)
                    .add(botao_remover))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados no arquivo"));

        conteudo_arquivo.setColumns(20);
        conteudo_arquivo.setRows(5);
        jScrollPane3.setViewportView(conteudo_arquivo);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 937, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void selecionar_arquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionar_arquivoActionPerformed
        // TODO add your handling code here:
        String imagens[]; 
        JFileChooser fc = new JFileChooser();   
        fc.setMultiSelectionEnabled(true);   
  
        fc.showOpenDialog(this);   
        arquivo = fc.getSelectedFile().getAbsoluteFile();
        if(fc.getSelectedFile()!=null){
            try {               
                
                //LENDO O ARQUIVO                   
                try {
                    reader = new FileReader(arquivo);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ImportarArquivosGerais.class.getName()).log(Level.SEVERE, null, ex);
                }
                BufferedReader leitor = new BufferedReader(reader); 
                String linha = "";   
                String texto = "";
                int pos=1;
                
                while(leitor.ready()) {   
                    linha = leitor.readLine();                    
                    if(pos==1){ preencherTabelaColunas(linha.toUpperCase());}
                    String ln = "Linha "+pos+++": "+linha+"\n";                                        
                    texto += ln;
                } 
                conteudo_arquivo.setText(texto);                
                leitor.close();
                botao_enviar.setEnabled(true);
            } catch (IOException ex) {
                Logger.getLogger(ImportarArquivosGerais.class.getName()).log(Level.SEVERE, null, ex);
            }
        }        
    }//GEN-LAST:event_selecionar_arquivoActionPerformed

    private void botao_enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_enviarActionPerformed
        // TODO add your handling code here:
        String txt = tabela_colunas.getSelectedValue()+"\t >> \t"+ tabela_banco.getSelectedValue();
        lista.addElement(txt);        
        tarefas.setModel(lista);       
        
    }//GEN-LAST:event_botao_enviarActionPerformed

    private void botao_removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_removerActionPerformed
        // TODO add your handling code here:        
        if(tarefas.getSelectedIndex()!=-1){
            lista.remove(tarefas.getSelectedIndex());
            tarefas.setModel(lista);       
        }
    }//GEN-LAST:event_botao_removerActionPerformed

    private void botao_importarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_importarActionPerformed
        // TODO add your handling code here:
        String txt = "Importando....\n\n";
        for(int i=0; i < lista.getSize();i++){
            try {
                try {
                    ImportarDados(lista.getElementAt(i));
                } catch (SQLException ex) {
                    Logger.getLogger(ImportarArquivosGerais.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (IOException ex) {
                Logger.getLogger(ImportarArquivosGerais.class.getName()).log(Level.SEVERE, null, ex);
            }
            txt += lista.getElementAt(i)+"\t [ok] \n ";                       
        }
        txt += "Importação encerrada com sucesso.";           
        conteudo_arquivo.setText(txt);
    }//GEN-LAST:event_botao_importarActionPerformed
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botao_enviar;
    private javax.swing.JButton botao_importar;
    private javax.swing.JButton botao_remover;
    private javax.swing.JTextArea conteudo_arquivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel painel_cadastrar_area;
    private javax.swing.JButton selecionar_arquivo;
    private javax.swing.JList tabela_banco;
    private javax.swing.JList tabela_colunas;
    private javax.swing.JList tarefas;
    // End of variables declaration//GEN-END:variables

    private void preencherTabelaColunas(final String linha) {
        tabela_colunas.setModel(new javax.swing.AbstractListModel() {
            String []strings = linha.split(";");            
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });       
    }

    private void ImportarDados(Object obj) throws IOException, SQLException {
        String vet[] = ((String)obj).split(">>");
        //System.out.println(vet[0].trim()+"  "+vet[1].trim());        
        //LENDO O ARQUIVO 
        reader = new FileReader(arquivo);
        BufferedReader leitor = new BufferedReader(reader); 
        String linha = "";   
        String texto = "";
        String vetortitulocoluna[]  = null;
        String vetorlinhadados[]    = null;
        
        int pos=0;
        int posicaocoluna=0;
        while(leitor.ready()) {   
            linha = leitor.readLine();                    
            //COLETANDO A POSIÇÃO DA COLUNA PARA COLETAR OS DADOS 
            if(pos==0){ 
                vetortitulocoluna = linha.toUpperCase().split(";");
                for(int j=0; j < vetortitulocoluna.length; j++){
                    if(vet[0].trim().equals(vetortitulocoluna[j].trim()))
                        posicaocoluna = j;
                }                
            }
            if(pos!=0){
                //COLENTADO OS DADOS DAS OUTRAS LINHAS NA COLUNA DESEJADA
                vetorlinhadados = linha.toUpperCase().split(";");            
                for(int j=0; j < vetorlinhadados.length; j++){                    
                   if(j==posicaocoluna){ InserirDadoTabela(vet[1].trim(),vetorlinhadados[j]);}                    
                }
            }
            pos++;
        } 
    }

    private void InserirDadoTabela(String colunaTabela, String valor) throws SQLException {
        if(colunaTabela.equals("DATA")){
            bd_Data = new BD_Data(kernel);
            bd_Data.Importar(valor.trim());
        }else if(colunaTabela.equals("AREA")){
            bd_Area = new BD_Area(kernel);
            bd_Area.Importar(valor.trim());
        }else if(colunaTabela.equals("ESPECIE")){
            bd_Especie = new BD_Especie(kernel);
            bd_Especie.Importar(valor.trim());
        }else if(colunaTabela.equals("SEXO")){
            bd_Sexo = new BD_Sexo(kernel);
            bd_Sexo.Importar(valor.trim());
        }else if(colunaTabela.equals("CATEGORIA")){
            bd_Categoria = new BD_Categoria(kernel);
            bd_Categoria.Importar(valor);
        }
    }

   

}
