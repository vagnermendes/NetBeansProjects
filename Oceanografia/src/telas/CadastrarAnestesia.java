/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastrarAnestesia.java
 *
 * Created on 14/02/2011, 18:44:34
 */

package telas;

import banco.BD_Anestesia;
import banco.BD_Medicacao;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.Date;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import objetos.Kernel;
import objetos.Anestesia;
import objetos.Animal;
import objetos.Medicacao;

/**
 *
 * @author vagner
 */
public class CadastrarAnestesia extends javax.swing.JPanel {

    private Kernel         kernel;         
    private Anestesia      obj_Anestesia;    
    private Medicacao      obj_Medicacao;    
    private BD_Anestesia   bd_Anestesia;
    private BD_Medicacao   bd_Medicacao;
    private Animal         obj_Animal;
    private int            acao;
    private Object         objeto;
    private final int editar  = 5;
    private final int excluir = 6;
    
    /** Creates new form CadastrarAnimais */
    public CadastrarAnestesia(Kernel obj,int acao,Object texto) {
        kernel      = obj;
        this.acao   = acao;
        this.objeto = texto;
        initComponents();                
        this.TabelaAnestesia();  
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        painel_cadastrar_area3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        Anestesia_quantidade = new javax.swing.JTextField();
        salvar_Anestesia = new javax.swing.JButton();
        Anestesia_id = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        combo_Medicacao = new javax.swing.JComboBox();
        busca_medicacao = new javax.swing.JButton();
        Medicacao_id = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Anestesia_concentracao = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Anestesia_hora = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Anestesia_minuto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Animal_id = new javax.swing.JLabel();
        botao_voltar = new javax.swing.JButton();
        sp = new javax.swing.JScrollPane();
        tabela_Anestesia = new javax.swing.JTable();

        jLabel2.setText("jLabel2");

        setBackground(new java.awt.Color(204, 204, 204));

        painel_cadastrar_area3.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Quantidade:");

        Anestesia_quantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Anestesia_quantidadeKeyPressed(evt);
            }
        });

        salvar_Anestesia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/salvar.png"))); // NOI18N
        salvar_Anestesia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvar_AnestesiaActionPerformed(evt);
            }
        });

        Anestesia_id.setBackground(new java.awt.Color(204, 204, 204));
        Anestesia_id.setForeground(new java.awt.Color(204, 204, 204));
        Anestesia_id.setText("0");

        jLabel1.setText("Medicação:");

        combo_Medicacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_Medicacao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_MedicacaoItemStateChanged(evt);
            }
        });

        busca_medicacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/question.gif"))); // NOI18N
        busca_medicacao.setToolTipText("Caso não tenha a temporada, cadastre aqui.");
        busca_medicacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busca_medicacaoActionPerformed(evt);
            }
        });

        Medicacao_id.setBackground(new java.awt.Color(0, 0, 0));
        Medicacao_id.setForeground(new java.awt.Color(204, 204, 204));
        Medicacao_id.setText("0");

        jLabel3.setText("Concentração:");

        jLabel5.setText("Hora:");

        jLabel6.setText(":");

        jLabel7.setText("%");

        jLabel8.setText("ml");

        Animal_id.setForeground(new java.awt.Color(204, 204, 204));
        Animal_id.setText("0");

        botao_voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/back.png"))); // NOI18N
        botao_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_voltarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout painel_cadastrar_area3Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area3);
        painel_cadastrar_area3.setLayout(painel_cadastrar_area3Layout);
        painel_cadastrar_area3Layout.setHorizontalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(7, 7, 7)
                        .add(jLabel1))
                    .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jLabel5)
                        .add(jLabel4)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, Anestesia_quantidade)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, Anestesia_hora, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                                .add(1, 1, 1)
                                .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(1, 1, 1)
                                .add(Anestesia_minuto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(Animal_id)
                                .add(4, 4, 4)
                                .add(Medicacao_id)
                                .add(6, 6, 6)
                                .add(Anestesia_id))
                            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel8)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(Anestesia_concentracao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel7))))
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(combo_Medicacao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(busca_medicacao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(botao_voltar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(salvar_Anestesia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painel_cadastrar_area3Layout.setVerticalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .add(4, 4, 4)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(salvar_Anestesia)
                    .add(botao_voltar)
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel1)
                                .add(combo_Medicacao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(busca_medicacao))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel4)
                            .add(Anestesia_quantidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel8)
                            .add(jLabel3)
                            .add(Anestesia_concentracao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel7))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel5)
                            .add(Anestesia_hora, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel6)
                            .add(Anestesia_minuto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(Anestesia_id)
                            .add(Medicacao_id)
                            .add(Animal_id))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabela_Anestesia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Cod", "Epoca", "Temporada", "Editar", "Excluir"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_Anestesia.setDragEnabled(true);
        tabela_Anestesia.setRowHeight(25);
        tabela_Anestesia.getTableHeader().setReorderingAllowed(false);
        sp.setViewportView(tabela_Anestesia);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Anestesia_quantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Anestesia_quantidadeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            SalvarAnestesia();
        }
}//GEN-LAST:event_Anestesia_quantidadeKeyPressed

    private void salvar_AnestesiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvar_AnestesiaActionPerformed
        // TODO add your handling code here:
        SalvarAnestesia();
}//GEN-LAST:event_salvar_AnestesiaActionPerformed

    private void combo_MedicacaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_MedicacaoItemStateChanged
        // TODO add your handling code here:
        Medicacao_id.setText(String.valueOf(bd_Medicacao.getMedicacaoIDNome((String)combo_Medicacao.getSelectedItem())));
    }//GEN-LAST:event_combo_MedicacaoItemStateChanged

    private void busca_medicacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busca_medicacaoActionPerformed
        // TODO add your handling code here:
        Object objeto = null;
        if(!Anestesia_id.getText().equals("0")){
            objeto = Integer.parseInt(Anestesia_id.getText());
        }else if(!Anestesia_quantidade.getText().equals("")){
            objeto = (String)Anestesia_quantidade.getText()+"-"+Anestesia_concentracao.getText()+"-"+Anestesia_hora.getText()+"-"+Anestesia_minuto.getText()+"-"+Anestesia_id.getText()+"-"+Medicacao_id.getText()+"-"+Animal_id.getText();
        }
         kernel.Tela(13,kernel,1,objeto,null);
    }//GEN-LAST:event_busca_medicacaoActionPerformed

    private void botao_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_voltarActionPerformed
        // TODO add your handling code here:        
        kernel.Tela(21,kernel,2,Animal_id.getText(),null);
    }//GEN-LAST:event_botao_voltarActionPerformed

    //SALVAR Anestesia
    private void SalvarAnestesia(){
        obj_Anestesia = new Anestesia();
        bd_Anestesia  = new BD_Anestesia(kernel);
        
        obj_Medicacao = new Medicacao();
        bd_Medicacao  = new BD_Medicacao(kernel);
        
        obj_Animal     = new Animal();
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm");  
        Date date = new Date();
        
        if(Anestesia_id.getText().equals("0")){
            obj_Anestesia.setQuantidade(Double.parseDouble(Anestesia_quantidade.getText()));
            obj_Anestesia.setConcentracao(Double.parseDouble(Anestesia_concentracao.getText()));
            
            String sDate = ((Anestesia_hora.getText().equals(""))?"00":Anestesia_hora.getText())+":"+((Anestesia_minuto.getText().equals(""))?"00":Anestesia_minuto.getText());
            try {
                obj_Anestesia.setHora(dateFormat.parse(sDate));
            } catch (ParseException ex) {
                Logger.getLogger(CadastrarAnestesia.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            obj_Medicacao.setMedicacao_id(Integer.parseInt(Medicacao_id.getText()));            
            obj_Anestesia.setMedicacao(obj_Medicacao);
            
            obj_Animal.setAnimal_id(Integer.parseInt(Animal_id.getText()));
            obj_Anestesia.setAnimal(obj_Animal);
            
            if(!Anestesia_quantidade.getText().equals("")&&!Anestesia_concentracao.getText().equals("")){
                bd_Anestesia.Salvar(obj_Anestesia);
            }
            
        }else{            
            
            obj_Anestesia.setAnestesia_id(Integer.parseInt(Anestesia_id.getText()));
            obj_Anestesia.setQuantidade(Double.parseDouble(Anestesia_quantidade.getText()));
            obj_Anestesia.setConcentracao(Double.parseDouble(Anestesia_concentracao.getText()));
            
            String sDate = ((Anestesia_hora.getText().equals(""))?"00":Anestesia_hora.getText())+":"+((Anestesia_minuto.getText().equals(""))?"00":Anestesia_minuto.getText());
            try {
                obj_Anestesia.setHora(dateFormat.parse(sDate));
            } catch (ParseException ex) {
                Logger.getLogger(CadastrarAnestesia.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            obj_Medicacao.setMedicacao_id(Integer.parseInt(Medicacao_id.getText()));            
            obj_Anestesia.setMedicacao(obj_Medicacao);
            
            obj_Animal.setAnimal_id(Integer.parseInt(Animal_id.getText()));
            obj_Anestesia.setAnimal(obj_Animal);
            
            bd_Anestesia.Atualizar(obj_Anestesia);
        }
        TabelaAnestesia();
        Anestesia_quantidade.setText(""); 
        Anestesia_concentracao.setText(""); 
        Anestesia_hora.setText(""); 
        Anestesia_minuto.setText(""); 
        Anestesia_id.setText("0");
        Medicacao_id.setText("0");
        combo_Medicacao.setSelectedIndex(0);
        //PREENCHER A TABELA DE DADOS COM AS ÁREAS
        
    }
    
    //TABELA Anestesia
    public void TabelaAnestesia(){
        
        
            if(objeto instanceof String){
                String vet[] = ((String)objeto).split("-");
                Anestesia_quantidade.setText(vet[0]);
                Anestesia_concentracao.setText(vet[1]);
                Anestesia_hora.setText(vet[2]);
                Anestesia_minuto.setText(vet[3]);
                Anestesia_id.setText(vet[4]);
                Medicacao_id.setText(vet[5]);
                Animal_id.setText(vet[6]);
            }else if(objeto instanceof Integer){
                Animal_id.setText(String.valueOf(((Integer)objeto)));
            }
        
        
        bd_Medicacao = new BD_Medicacao(kernel);
        /********* PREENCHENDO O VETOR Medicacao *************/
        Medicacao[] Medicacao_vetor = null;
        try {
                Medicacao_vetor = bd_Medicacao.getMedicacaos();
            } catch (SQLException exx) {
                Logger.getLogger(CadastrarAnestesia.class.getName()).log(Level.SEVERE, null, exx);
            }
        String dados1[] = new String[Medicacao_vetor.length];

        obj_Medicacao = new Medicacao();
        int pos = 0;
        for(int i=0; i < Medicacao_vetor.length; i++){
            obj_Medicacao = (Medicacao)Medicacao_vetor[i];
            dados1[i] = String.valueOf(obj_Medicacao.getNome()).toUpperCase();
            if(acao!=0){                
                    if(acao==obj_Medicacao.getMedicacao_id()){
                        Medicacao_id.setText(String.valueOf(obj_Medicacao.getMedicacao_id()));                                
                        pos = i;
                    }           
            }else if(i==0){
                Medicacao_id.setText(String.valueOf(obj_Medicacao.getMedicacao_id()));
            }
        }
        combo_Medicacao.setModel(new javax.swing.DefaultComboBoxModel(dados1));        
        
        if(acao!=0){
            combo_Medicacao.setSelectedIndex(pos);
        }        
        /*****************************************************************/
        //PREECHENDO A TABELA Anestesia
        bd_Anestesia = new BD_Anestesia(kernel);
        Anestesia[] Anestesia_vetor = null;
        try {
            //VERIFICAR SE É BUSCA OU NÃO        
            Anestesia_vetor = bd_Anestesia.getAnestesias();
        } catch (SQLException ex2) {
            Logger.getLogger(CadastrarAnestesia.class.getName()).log(Level.SEVERE, null, ex2);
        }
        
        
        String dados[][] = new String[Anestesia_vetor.length][7];

        Anestesia obj_Anestesia = new Anestesia();
        for(int i=0; i < Anestesia_vetor.length; i++){
            obj_Anestesia = (Anestesia)Anestesia_vetor[i];
            dados[i][0] = String.valueOf(obj_Anestesia.getAnestesia_id());
            dados[i][1] = String.valueOf(obj_Anestesia.getConcentracao());
            dados[i][2] = String.valueOf(obj_Anestesia.getQuantidade());
            dados[i][3] = String.valueOf(new SimpleDateFormat("HH:mm").format(obj_Anestesia.getHora()));
            dados[i][4] = String.valueOf(obj_Anestesia.getMedicacao().getNome());
            dados[i][5] = "editar";
            dados[i][6] = "excluir";
         
        }
      
        
        tabela_Anestesia.setModel(new javax.swing.table.DefaultTableModel(
            dados,
            new String [] {"Cod", "Conc.","Quant.","Hora","Medicação","", ""}){
            Class[] types = new Class [] {
                java.lang.String.class, 
                java.lang.String.class,
                java.lang.String.class, 
                java.lang.String.class,
                java.lang.String.class, 
                java.lang.String.class,
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
      
        tabela_Anestesia.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabela_Anestesia.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabela_Anestesia.getColumnModel().getColumn(1).setPreferredWidth(100);        
        tabela_Anestesia.getColumnModel().getColumn(2).setPreferredWidth(100);
        tabela_Anestesia.getColumnModel().getColumn(3).setPreferredWidth(100);
        tabela_Anestesia.getColumnModel().getColumn(4).setPreferredWidth(100);
        tabela_Anestesia.getColumnModel().getColumn(editar).setPreferredWidth(30);
        tabela_Anestesia.getColumnModel().getColumn(excluir).setPreferredWidth(30);
        
        tabela_Anestesia.setDragEnabled(true);
        sp.setViewportView(tabela_Anestesia);        
        //ButtonColumn buttonColumn0 = new ButtonColumn(table, 0);//VER
        ButtonColumnAnestesia buttonColumnAnestesia1 = new ButtonColumnAnestesia(tabela_Anestesia, editar);//EDITAR
        ButtonColumnAnestesia buttonColumnAnestesia2 = new ButtonColumnAnestesia(tabela_Anestesia, excluir);//EXCLUIR
    }

    //CLASSE BUTTONCOLUMN Anestesia
    class ButtonColumnAnestesia extends AbstractCellEditor
         implements TableCellRenderer, TableCellEditor, ActionListener
     {
         JTable table;
         JButton renderButton;
         JButton editButton;
         String text;

         public ButtonColumnAnestesia(JTable table, int column)
         {
             super();
             this.table = table;
             renderButton = new JButton();

             editButton = new JButton();
             
             editButton.setFocusPainted( false );
             editButton.addActionListener( this );

             TableColumnModel columnModel = table.getColumnModel();
             columnModel.getColumn(column).setCellRenderer( this );
             columnModel.getColumn(column).setCellEditor( this );
         }

         public Component getTableCellRendererComponent(
             JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
         {
             if (hasFocus)
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }
             else if (isSelected)
             {
                 renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
             else
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }

             renderButton.setBackground(new java.awt.Color(255, 255, 255));
             renderButton.setBorder(null);
             renderButton.setBorderPainted(false);
             renderButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

             text = (value == null) ? "" : value.toString();
             String imagem1 = text.equals("excluir")?"lixeira":"editar";
             renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem1+".png")));
             return renderButton;
         }

         public Component getTableCellEditorComponent(
             JTable table, Object value, boolean isSelected, int row, int column)
         {
             text = (value == null) ? "" : value.toString();             
             String imagem2 = text.equals("excluir")?"lixeira":"editar";
             editButton.setBackground(new java.awt.Color(255, 255, 255));
             editButton.setBorder(null);
             editButton.setBorderPainted(false);             
             editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem2+".png")));
             editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
             //editButton.setText( text );
             return editButton;
         }

         public Object getCellEditorValue()
         {
             return text;
        }

         public void actionPerformed(ActionEvent e)
         {
             fireEditingStopped();

             switch(table.getSelectedColumn()){
                 case excluir:
                     SolicitaConfirmacaoAnestesia();
                     TabelaAnestesia();
                 break;
                 case editar:
                     int id_reg = Integer.parseInt(table.getValueAt(table.getSelectedRow(),0).toString());
                     obj_Anestesia = bd_Anestesia.getAnestesiaID(id_reg);
                     Anestesia_quantidade.setText(String.valueOf(obj_Anestesia.getQuantidade()));
                     Anestesia_concentracao.setText(String.valueOf(obj_Anestesia.getConcentracao()));
                     
                     String horas = new SimpleDateFormat("HH:mm").format(obj_Anestesia.getHora());
                     String vet[] = horas.split(":");
                     Anestesia_hora.setText(vet[0]);
                     Anestesia_minuto.setText(vet[1]);
                     
                     Anestesia_id.setText(String.valueOf(obj_Anestesia.getAnestesia_id()));
                     Medicacao_id.setText(String.valueOf(obj_Anestesia.getMedicacao().getMedicacao_id()));
                     
                     combo_Medicacao.setSelectedItem((Object)obj_Anestesia.getMedicacao().getNome().toUpperCase());
                             
                 break;
                 default:
                     kernel.Tela(0, kernel, 0,null,null);
                 break;
             }
             //System.out.println( "DADOS : " + table.getSelectedRow()+" "+" "+table.getSelectedColumn()+" "+table.getColumnCount()+" "+table.getValueAt(table.getSelectedRow(),0));
             
         }
     }
    private void SolicitaConfirmacaoAnestesia(){
     boolean escolha = false;

     Object[] options = {"Sim",
                    "Não"};
    int resposta = JOptionPane.showOptionDialog(this,
        "Desejas excluir o registro ?",
        "Exclusão",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE,
        null,     //do not use a custom Icon
        options,  //the titles of buttons
        options[1]);
     
     if (resposta == 0) {
       bd_Anestesia.Excluir(Integer.parseInt(tabela_Anestesia.getValueAt(tabela_Anestesia.getSelectedRow(),0).toString()));
     }
     
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Anestesia_concentracao;
    private javax.swing.JTextField Anestesia_hora;
    private javax.swing.JLabel Anestesia_id;
    private javax.swing.JTextField Anestesia_minuto;
    private javax.swing.JTextField Anestesia_quantidade;
    private javax.swing.JLabel Animal_id;
    private javax.swing.JLabel Medicacao_id;
    private javax.swing.JButton botao_voltar;
    private javax.swing.JButton busca_medicacao;
    private javax.swing.JComboBox combo_Medicacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel painel_cadastrar_area3;
    private javax.swing.JButton salvar_Anestesia;
    private javax.swing.JScrollPane sp;
    private javax.swing.JTable tabela_Anestesia;
    // End of variables declaration//GEN-END:variables

}
