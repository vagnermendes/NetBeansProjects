/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastrarBioquimicos.java
 *
 * Created on 14/02/2011, 18:15:37
 */

package telas;

import banco.BD_Bioquimico;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import objetos.Bioquimico;
import objetos.Kernel;
/**
 *
 * @author vagner
 */
public class CadastrarBioquimico extends javax.swing.JPanel {

    private Kernel      kernel;     
    private Bioquimico        obj_Bioquimico;
    private BD_Bioquimico     bd_Bioquimico;
        
    /** Creates new form CadastrarAnimais */
    public CadastrarBioquimico(Kernel obj,int acao,Object texto) {
        this.kernel = obj;
        initComponents();
        this.TabelaBioquimico();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sp = new javax.swing.JScrollPane();
        tabela_Bioquimico = new javax.swing.JTable();
        painel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Bioquimico_nome = new javax.swing.JTextField();
        salvar_Bioquimico = new javax.swing.JButton();
        Bioquimico_id = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(540, 340));

        tabela_Bioquimico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Cod", "Nome", "Editar", "Excluir"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_Bioquimico.setDragEnabled(true);
        tabela_Bioquimico.setRowHeight(25);
        tabela_Bioquimico.getTableHeader().setReorderingAllowed(false);
        sp.setViewportView(tabela_Bioquimico);

        painel.setBackground(new java.awt.Color(204, 204, 204));
        painel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Nome:");

        Bioquimico_nome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Bioquimico_nomeKeyPressed(evt);
            }
        });

        salvar_Bioquimico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/salvar.png"))); // NOI18N
        salvar_Bioquimico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvar_BioquimicoActionPerformed(evt);
            }
        });

        Bioquimico_id.setForeground(new java.awt.Color(204, 204, 204));
        Bioquimico_id.setText("0");

        org.jdesktop.layout.GroupLayout painelLayout = new org.jdesktop.layout.GroupLayout(painel);
        painel.setLayout(painelLayout);
        painelLayout.setHorizontalGroup(
            painelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, painelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(Bioquimico_nome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(Bioquimico_id, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(salvar_Bioquimico, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(245, 245, 245))
        );
        painelLayout.setVerticalGroup(
            painelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painelLayout.createSequentialGroup()
                .add(painelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(painelLayout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(painelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(Bioquimico_id)
                            .add(Bioquimico_nome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1)))
                    .add(salvar_Bioquimico))
                .addContainerGap(5, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(painel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 322, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(215, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(painel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Bioquimico_nomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Bioquimico_nomeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            SalvarBioquimico();
        }
}//GEN-LAST:event_Bioquimico_nomeKeyPressed

    private void salvar_BioquimicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvar_BioquimicoActionPerformed
        // TODO add your handling code here:
        SalvarBioquimico();
}//GEN-LAST:event_salvar_BioquimicoActionPerformed

    //SALVAR Bioquimico
    private void SalvarBioquimico(){
        obj_Bioquimico   = new Bioquimico();
        bd_Bioquimico    = new BD_Bioquimico(kernel);
        
        if(Bioquimico_id.getText().equals("0")){
            obj_Bioquimico.setNome(Bioquimico_nome.getText());
            if(!Bioquimico_nome.getText().equals("")){
                bd_Bioquimico.Salvar(obj_Bioquimico);
            }
            
        }else{
            obj_Bioquimico.setNome(Bioquimico_nome.getText());
            obj_Bioquimico.setBioquimico_id(Integer.parseInt(Bioquimico_id.getText()));
            bd_Bioquimico.Atualizar(obj_Bioquimico);
        }
        
        Bioquimico_nome.setText(""); 
        Bioquimico_id.setText("0"); 
        //PREENCHER A TABELA DE DADOS COM AS ÁREAS
        TabelaBioquimico();
    }
    
    //TABELA Bioquimico
    public void TabelaBioquimico(){
    
        bd_Bioquimico = new BD_Bioquimico(kernel);
        Bioquimico[] Bioquimicos_vetor = null;
        try {
            //VERIFICAR SE É BUSCA OU NÃO        
            Bioquimicos_vetor = bd_Bioquimico.getBioquimicos();
        } catch (SQLException ex) {
            Logger.getLogger(CadastrarBioquimico.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        String dados[][] = new String[Bioquimicos_vetor.length][4];

        Bioquimico obj = new Bioquimico();
        for(int i=0; i < Bioquimicos_vetor.length; i++){
            obj = (Bioquimico)Bioquimicos_vetor[i];
            dados[i][0] = String.valueOf(obj.getBioquimico_id());
            dados[i][1] = String.valueOf(obj.getNome());            
            dados[i][2] = "editar";
            dados[i][3] = "excluir";
         
        }
      
        
        tabela_Bioquimico.setModel(new javax.swing.table.DefaultTableModel(
            dados,
            new String [] {"Cod", "Nome","", ""}){
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
      
        tabela_Bioquimico.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabela_Bioquimico.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabela_Bioquimico.getColumnModel().getColumn(1).setPreferredWidth(300);        
        tabela_Bioquimico.getColumnModel().getColumn(2).setPreferredWidth(30);
        tabela_Bioquimico.getColumnModel().getColumn(3).setPreferredWidth(30);
        
        tabela_Bioquimico.setDragEnabled(true);
        sp.setViewportView(tabela_Bioquimico);        
        //ButtonColumn buttonColumn0 = new ButtonColumn(table, 0);//VER
        ButtonColumnBioquimicos buttonColumnBioquimicos1 = new ButtonColumnBioquimicos(tabela_Bioquimico, 2);//EDITAR
        ButtonColumnBioquimicos buttonColumnBioquimicos2 = new ButtonColumnBioquimicos(tabela_Bioquimico, 3);//EXCLUIR
    }
    
    //CLASSE BUTTONCOLUMN BioquimicoS
    class ButtonColumnBioquimicos extends AbstractCellEditor
         implements TableCellRenderer, TableCellEditor, ActionListener
     {
         JTable table;
         JButton renderButton;
         JButton editButton;
         String text;

         public ButtonColumnBioquimicos(JTable table, int column)
         {
             super();
             this.table = table;
             renderButton = new JButton();

             editButton = new JButton();
             
             editButton.setFocusPainted( false );
             editButton.addActionListener( this );

             TableColumnModel columnModel = table.getColumnModel();
             columnModel.getColumn(column).setCellRenderer( this );
             columnModel.getColumn(column).setCellEditor( this );
         }

         public Component getTableCellRendererComponent(
             JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
         {
             if (hasFocus)
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }
             else if (isSelected)
             {
                 renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
             else
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }

             renderButton.setBackground(new java.awt.Color(255, 255, 255));
             renderButton.setBorder(null);
             renderButton.setBorderPainted(false);
             renderButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

             text = (value == null) ? "" : value.toString();
             String imagem1 = text.equals("excluir")?"lixeira":"editar";
             renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem1+".png")));
             return renderButton;
         }

         public Component getTableCellEditorComponent(
             JTable table, Object value, boolean isSelected, int row, int column)
         {
             text = (value == null) ? "" : value.toString();             
             String imagem2 = text.equals("excluir")?"lixeira":"editar";
             editButton.setBackground(new java.awt.Color(255, 255, 255));
             editButton.setBorder(null);
             editButton.setBorderPainted(false);             
             editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem2+".png")));
             editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
             //editButton.setText( text );
             return editButton;
         }

         public Object getCellEditorValue()
         {
             return text;
        }

         public void actionPerformed(ActionEvent e)
         {
             fireEditingStopped();

             switch(table.getSelectedColumn()){
                 case 3:
                     SolicitaConfirmacaoBioquimico();
                     TabelaBioquimico();
                 break;
                 case 2:
                     int id_reg = Integer.parseInt(table.getValueAt(table.getSelectedRow(),0).toString());
                     obj_Bioquimico = bd_Bioquimico.getBioquimicoID(id_reg);
                     Bioquimico_nome.setText(obj_Bioquimico.getNome());
                     Bioquimico_id.setText(String.valueOf(obj_Bioquimico.getBioquimico_id()));
                 break;
                 default:
                     kernel.Tela(0, kernel, 0,null,null);
                 break;
             }
             //System.out.println( "DADOS : " + table.getSelectedRow()+" "+" "+table.getSelectedColumn()+" "+table.getColumnCount()+" "+table.getValueAt(table.getSelectedRow(),0));
             
         }
     }
    private void SolicitaConfirmacaoBioquimico(){
     boolean escolha = false;

     Object[] options = {"Sim",
                    "Não"};
    int resposta = JOptionPane.showOptionDialog(this,
        "Desejas excluir o registro ?",
        "Exclusão",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE,
        null,     //do not use a custom Icon
        options,  //the titles of buttons
        options[1]);
     
     if (resposta == 0) {
       bd_Bioquimico.Excluir(Integer.parseInt(tabela_Bioquimico.getValueAt(tabela_Bioquimico.getSelectedRow(),0).toString()));
     }
     
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bioquimico_id;
    private javax.swing.JTextField Bioquimico_nome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel painel;
    private javax.swing.JButton salvar_Bioquimico;
    private javax.swing.JScrollPane sp;
    private javax.swing.JTable tabela_Bioquimico;
    // End of variables declaration//GEN-END:variables

}
