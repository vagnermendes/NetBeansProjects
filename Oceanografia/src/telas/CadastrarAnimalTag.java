/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastrarTag.java
 *
 * Created on 14/02/2011, 18:44:34
 */

package telas;

import banco.BD_Tag;
import banco.BD_CorTag;
import banco.BD_AnimalTag;
import banco.BD_Animal;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import objetos.Animal;
import objetos.Kernel;
import objetos.Tag;
import objetos.CorTag;
import objetos.AnimalTag;
/**
 *
 * @author vagner
 */
public class CadastrarAnimalTag extends javax.swing.JPanel {

    private Kernel          kernel;         
    private Tag             obj_Tag;    
    private AnimalTag       obj_AnimalTag;    
    private CorTag          obj_CorTag;    
    private Animal          obj_Animal;    
    private BD_Tag          bd_Tag;
    private BD_AnimalTag    bd_AnimalTag;
    private BD_CorTag       bd_CorTag;
    private BD_Animal       bd_Animal;
    private int             acao;
    private Object          objeto;
    private final int       editar     = 4;
    private final int       excluir    = 5;
    private final int       selecionar = 6;
    
    /** Creates new form CadastrarAnimais */
    public CadastrarAnimalTag(Kernel obj,int acao,Object texto) {
        kernel = obj;
        this.acao = acao;
        this.objeto = texto;
        initComponents();                       
        
        if(acao==1){             
            SalvarAnimalTag();                              
        }else{            
            animal_id.setText((String)objeto);        
        }
        this.TabelaAnimalTag();      
    }

    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel_cadastrar_area3 = new javax.swing.JPanel();
        salvar_Tag = new javax.swing.JButton();
        voltar = new javax.swing.JButton();
        animal_tag_id = new javax.swing.JLabel();
        animal_id = new javax.swing.JLabel();
        sp = new javax.swing.JScrollPane();
        tabela_Tag = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 204));

        painel_cadastrar_area3.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        salvar_Tag.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/adduser.png"))); // NOI18N
        salvar_Tag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvar_TagActionPerformed(evt);
            }
        });

        voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/back.png"))); // NOI18N
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        animal_tag_id.setForeground(new java.awt.Color(204, 204, 204));
        animal_tag_id.setText("0");

        animal_id.setBackground(new java.awt.Color(204, 204, 204));
        animal_id.setForeground(new java.awt.Color(204, 204, 204));
        animal_id.setText("0");

        org.jdesktop.layout.GroupLayout painel_cadastrar_area3Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area3);
        painel_cadastrar_area3.setLayout(painel_cadastrar_area3Layout);
        painel_cadastrar_area3Layout.setHorizontalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .add(salvar_Tag, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(voltar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(animal_id)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(animal_tag_id)
                .addContainerGap(510, Short.MAX_VALUE))
        );
        painel_cadastrar_area3Layout.setVerticalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                .add(voltar)
                .add(salvar_Tag))
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .addContainerGap()
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(animal_tag_id)
                    .add(animal_id)))
        );

        tabela_Tag.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Cod", "Cod ID", "Tag", "Editar", "Excluir"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_Tag.setDragEnabled(true);
        tabela_Tag.setRowHeight(25);
        tabela_Tag.getTableHeader().setReorderingAllowed(false);
        sp.setViewportView(tabela_Tag);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
            .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void salvar_TagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvar_TagActionPerformed
        // TODO add your handling code here:
        kernel.Tela(15,null,2,animal_id.getText(),null);
}//GEN-LAST:event_salvar_TagActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        kernel.Tela(21,null,2,animal_id.getText(),null);
    }//GEN-LAST:event_voltarActionPerformed

    private void SalvarAnimalTag(){
    
        //SALVANDO ANIMAL TAG
        System.out.println((String)objeto);
        String vet[] = ((String)objeto).split("-");
        
        obj_AnimalTag = new AnimalTag();         
        obj_Animal    = new Animal();
        obj_Tag       = new Tag();
        bd_AnimalTag  = new BD_AnimalTag(kernel);
        
        obj_Tag.setTag_id(Integer.parseInt(vet[1]));
        obj_Animal.setAnimal_id(Integer.parseInt(vet[0]));
        
        obj_AnimalTag.setAnimal(obj_Animal);
        obj_AnimalTag.setTag(obj_Tag);

        bd_AnimalTag.Salvar(obj_AnimalTag);    
        animal_id.setText((String)vet[0]);        
        objeto = vet[1];
    }
    
    //TABELA Tag
    public void TabelaAnimalTag(){

        /*****************************************************************/
        //PREECHENDO A TABELA Tag
        bd_AnimalTag = new BD_AnimalTag(kernel);
        AnimalTag[] AnimalTag_vetor = null;
        try {
            //VERIFICAR SE É BUSCA OU NÃO            
            AnimalTag_vetor = bd_AnimalTag.getAnimalTags(Integer.parseInt(((acao==1)?animal_id.getText():(String)objeto)));
        } catch (SQLException ex2) {
            Logger.getLogger(CadastrarAnimalTag.class.getName()).log(Level.SEVERE, null, ex2);
        }
        
        
        String dados[][] = new String[AnimalTag_vetor.length][6];

        AnimalTag obj_AnimalTag = new AnimalTag();
        for(int i=0; i < AnimalTag_vetor.length; i++){
            obj_AnimalTag = (AnimalTag)AnimalTag_vetor[i];
            dados[i][0] = String.valueOf(obj_AnimalTag.getAnimal_tag_id());
            dados[i][1] = obj_AnimalTag.getTag().getCod_id();
            dados[i][2] = String.valueOf(obj_AnimalTag.getTag().getTag());
            dados[i][3] = String.valueOf(obj_AnimalTag.getTag().getCorTag().getNome());
            
                dados[i][editar] = "editar";
                dados[i][excluir] = "excluir";
               
         
        }
      
        
        tabela_Tag.setModel(new javax.swing.table.DefaultTableModel(
            dados,
            (new String [] {"Cod", "Cod ID","Tag","Cor Tag","", ""})){
            Class[] types = new Class [] {
                java.lang.String.class, 
                java.lang.String.class,
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
      
        tabela_Tag.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabela_Tag.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabela_Tag.getColumnModel().getColumn(1).setPreferredWidth(100);        
        tabela_Tag.getColumnModel().getColumn(2).setPreferredWidth(100);        
        tabela_Tag.getColumnModel().getColumn(3).setPreferredWidth(200);        
        
            tabela_Tag.getColumnModel().getColumn(editar).setPreferredWidth(30);
            tabela_Tag.getColumnModel().getColumn(excluir).setPreferredWidth(30);
        
        
        tabela_Tag.setDragEnabled(true);
        sp.setViewportView(tabela_Tag);        
        //ButtonColumn buttonColumn0 = new ButtonColumn(table, 0);//VER
        
        ButtonColumnAnimalTag button1 = new ButtonColumnAnimalTag(tabela_Tag, editar);//EDITAR
        ButtonColumnAnimalTag button2 = new ButtonColumnAnimalTag(tabela_Tag, excluir);//EXCLUIR
        
    }

    //CLASSE BUTTONCOLUMN Tag
    class ButtonColumnAnimalTag extends AbstractCellEditor
         implements TableCellRenderer, TableCellEditor, ActionListener
     {
         JTable table;
         JButton renderButton;
         JButton editButton;
         String text;

         public ButtonColumnAnimalTag(JTable table, int column)
         {
             super();
             this.table = table;
             renderButton = new JButton();

             editButton = new JButton();
             
             editButton.setFocusPainted( false );
             editButton.addActionListener( this );

             TableColumnModel columnModel = table.getColumnModel();
             columnModel.getColumn(column).setCellRenderer( this );
             columnModel.getColumn(column).setCellEditor( this );
         }

         public Component getTableCellRendererComponent(
             JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
         {
             if (hasFocus)
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }
             else if (isSelected)
             {
                 renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
             else
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }

             renderButton.setBackground(new java.awt.Color(255, 255, 255));
             renderButton.setBorder(null);
             renderButton.setBorderPainted(false);
             renderButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

             text = (value == null) ? "" : value.toString();
             String imagem1 = "";
             
             imagem1 = text.equals("excluir")?"lixeira":"editar";
             
             renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem1+".png")));
             return renderButton;
         }

         public Component getTableCellEditorComponent(
             JTable table, Object value, boolean isSelected, int row, int column)
         {
             text = (value == null) ? "" : value.toString();             
             String imagem2 = text.equals("excluir")?"lixeira":"editar";
             editButton.setBackground(new java.awt.Color(255, 255, 255));
             editButton.setBorder(null);
             editButton.setBorderPainted(false);             
             editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem2+".png")));
             editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
             //editButton.setText( text );
             return editButton;
         }

         public Object getCellEditorValue()
         {
             return text;
        }

         public void actionPerformed(ActionEvent e)
         {
             fireEditingStopped();

             switch(table.getSelectedColumn()){
                 case excluir:
                     SolicitaConfirmacaoAnimalTag();
                     TabelaAnimalTag();
                 break;
                 case editar:
                 
                 break;    
                 default:
                     kernel.Tela(0, kernel, 0,null,null);
                 break;
             }
             //System.out.println( "DADOS : " + table.getSelectedRow()+" "+" "+table.getSelectedColumn()+" "+table.getColumnCount()+" "+table.getValueAt(table.getSelectedRow(),0));
             
         }
     }
    private void SolicitaConfirmacaoAnimalTag(){
     boolean escolha = false;

     Object[] options = {"Sim",
                    "Não"};
    int resposta = JOptionPane.showOptionDialog(this,
        "Desejas excluir o registro ?",
        "Exclusão",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE,
        null,     //do not use a custom Icon
        options,  //the titles of buttons
        options[1]);
     
     if (resposta == 0) {         
       bd_AnimalTag.Excluir(Integer.parseInt(tabela_Tag.getValueAt(tabela_Tag.getSelectedRow(),0).toString()));
     }
     
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel animal_id;
    private javax.swing.JLabel animal_tag_id;
    private javax.swing.JPanel painel_cadastrar_area3;
    private javax.swing.JButton salvar_Tag;
    private javax.swing.JScrollPane sp;
    private javax.swing.JTable tabela_Tag;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables

}
