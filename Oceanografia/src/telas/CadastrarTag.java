/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastrarTag.java
 *
 * Created on 14/02/2011, 18:44:34
 */

package telas;

import banco.BD_Tag;
import banco.BD_CorTag;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import objetos.Kernel;
import objetos.Animal;
import objetos.Tag;
import objetos.CorTag;

/**
 *
 * @author vagner
 */
public class CadastrarTag extends javax.swing.JPanel {

    private Kernel      kernel;         
    private Tag         obj_Tag;    
    private CorTag      obj_CorTag;    
    private Animal      obj_Animal;
    private BD_Tag      bd_Tag;
    private BD_CorTag   bd_CorTag;
    private int         acao;
    private Object      objeto;
    private final int editar     = 4;
    private final int excluir    = 5;
    private final int selecionar = 6;
    
    /** Creates new form CadastrarAnimais */
    public CadastrarTag(Kernel obj,int acao,Object texto) {
        kernel = obj;
        this.acao = acao;
        this.objeto = texto;
        initComponents();                
        this.TabelaTag();      
        
        if(acao==2){
            Animal_id.setText((String)objeto);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel_cadastrar_area3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nome_CodID = new javax.swing.JTextField();
        salvar_Tag = new javax.swing.JButton();
        Tag_id = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        combo_CorTag = new javax.swing.JComboBox();
        busca_CorTag = new javax.swing.JButton();
        CorTag_id = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nome_Tag = new javax.swing.JTextField();
        Animal_id = new javax.swing.JLabel();
        sp = new javax.swing.JScrollPane();
        tabela_Tag = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 204));

        painel_cadastrar_area3.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Código Identificador:");

        nome_CodID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nome_CodIDKeyPressed(evt);
            }
        });

        salvar_Tag.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/salvar.png"))); // NOI18N
        salvar_Tag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvar_TagActionPerformed(evt);
            }
        });

        Tag_id.setForeground(new java.awt.Color(204, 204, 204));
        Tag_id.setText("0");

        jLabel1.setText("Cor Tag:");

        combo_CorTag.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_CorTag.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_CorTagItemStateChanged(evt);
            }
        });

        busca_CorTag.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/question.gif"))); // NOI18N
        busca_CorTag.setToolTipText("Caso não tenha a temporada, cadastre aqui.");
        busca_CorTag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busca_CorTagActionPerformed(evt);
            }
        });

        CorTag_id.setForeground(new java.awt.Color(204, 204, 204));
        CorTag_id.setText("0");

        jLabel2.setText("Tag:");

        Animal_id.setForeground(new java.awt.Color(204, 204, 204));
        Animal_id.setText("0");

        org.jdesktop.layout.GroupLayout painel_cadastrar_area3Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area3);
        painel_cadastrar_area3.setLayout(painel_cadastrar_area3Layout);
        painel_cadastrar_area3Layout.setHorizontalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel1)
                    .add(jLabel4))
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(5, 5, 5)
                        .add(combo_CorTag, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(nome_CodID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(nome_Tag, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(Animal_id)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(CorTag_id)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(Tag_id))
                    .add(busca_CorTag, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 44, Short.MAX_VALUE)
                .add(salvar_Tag, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        painel_cadastrar_area3Layout.setVerticalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(4, 4, 4)
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel4)
                            .add(nome_CodID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel2)
                            .add(nome_Tag, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(Tag_id)
                            .add(CorTag_id)
                            .add(Animal_id))
                        .add(8, 8, 8)
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(combo_CorTag, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(busca_CorTag)))
                    .add(salvar_Tag))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabela_Tag.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Cod", "Epoca", "Temporada", "Editar", "Excluir"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_Tag.setDragEnabled(true);
        tabela_Tag.setRowHeight(25);
        tabela_Tag.getTableHeader().setReorderingAllowed(false);
        sp.setViewportView(tabela_Tag);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(sp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 567, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nome_CodIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nome_CodIDKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            SalvarTag();
        }
}//GEN-LAST:event_nome_CodIDKeyPressed

    private void salvar_TagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvar_TagActionPerformed
        // TODO add your handling code here:
        SalvarTag();
}//GEN-LAST:event_salvar_TagActionPerformed

    private void combo_CorTagItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_CorTagItemStateChanged
        // TODO add your handling code here:
        CorTag_id.setText(String.valueOf(bd_CorTag.getCorTagIDNome((String)combo_CorTag.getSelectedItem())));
    }//GEN-LAST:event_combo_CorTagItemStateChanged

    private void busca_CorTagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busca_CorTagActionPerformed
        // TODO add your handling code here:
        Object objeto = null;
        if(!Tag_id.getText().equals("0")){
            objeto = Integer.parseInt(Tag_id.getText());
        }else if(!nome_CodID.getText().equals("")||nome_Tag.getText().equals("")){
            objeto = (String)nome_CodID.getText()+"-"+nome_Tag.getText();
        }
         kernel.Tela(2,kernel,1,objeto,null);
    }//GEN-LAST:event_busca_CorTagActionPerformed

    //SALVAR Tag
    private void SalvarTag(){
        obj_Tag = new Tag();
        obj_Animal = new Animal();
        bd_Tag  = new BD_Tag(kernel);
        
        obj_CorTag = new CorTag();
        bd_CorTag  = new BD_CorTag(kernel);
        
        if(Tag_id.getText().equals("0")){
            obj_Tag.setTag(Integer.parseInt(nome_Tag.getText()));
            obj_Tag.setCod_id(nome_CodID.getText());
            obj_CorTag.setCortag_id(Integer.parseInt(CorTag_id.getText()));
            obj_Tag.setCorTag(obj_CorTag);
            
            obj_Animal.setAnimal_id(Integer.parseInt(Animal_id.getText()));
            obj_Tag.setAnimal(obj_Animal);
            if(!nome_CodID.getText().equals("")){
                bd_Tag.Salvar(obj_Tag);
            }
            
        }else{            
            obj_Tag.setTag_id(Integer.parseInt(Tag_id.getText()));
            obj_Tag.setTag(Integer.parseInt(nome_Tag.getText()));
            obj_Tag.setCod_id(nome_CodID.getText());
            obj_CorTag.setCortag_id(Integer.parseInt(CorTag_id.getText()));
            obj_Tag.setCorTag(obj_CorTag);
            obj_Animal.setAnimal_id(Integer.parseInt(Animal_id.getText()));
            obj_Tag.setAnimal(obj_Animal);
            bd_Tag.Atualizar(obj_Tag);
        }
        TabelaTag();
        nome_CodID.setText(""); 
        nome_Tag.setText(""); 
        Tag_id.setText("0"); 
        CorTag_id.setText("0"); 
        combo_CorTag.setSelectedIndex(0);
        //PREENCHER A TABELA DE DADOS COM AS ÁREAS
        
    }
    
    //TABELA Tag
    public void TabelaTag(){

        
        if((objeto instanceof String)&&(acao==1)){            
            String vet[] = ((String)objeto).split("-");            
            if(vet.length>0){
            nome_CodID.setText(vet[0]);
            nome_Tag.setText(vet[1]);
            }            
        }else if(objeto instanceof Integer){
            Tag_id.setText(String.valueOf((Integer)objeto));
        }
        
        bd_CorTag = new BD_CorTag(kernel);
        /********* PREENCHENDO O VETOR CorTag *************/
        CorTag[] CorTag_vetor = null;
        try {
                CorTag_vetor = bd_CorTag.getCorTags();
            } catch (SQLException exx) {
                Logger.getLogger(CadastrarTag.class.getName()).log(Level.SEVERE, null, exx);
            }
        String dados1[] = new String[CorTag_vetor.length];

        CorTag obj_CorTag = new CorTag();
        int pos = 0;
        for(int i=0; i < CorTag_vetor.length; i++){
            obj_CorTag = (CorTag)CorTag_vetor[i];
            dados1[i] = String.valueOf(obj_CorTag.getNome()).toUpperCase();
            if(acao!=0){                
                    if(acao==obj_CorTag.getCortag_id()){
                        CorTag_id.setText(String.valueOf(obj_CorTag.getCortag_id()));                                
                        pos = i;
                    }           
            }else if(i==0){
                CorTag_id.setText(String.valueOf(obj_CorTag.getCortag_id()));
            }
        }
        combo_CorTag.setModel(new javax.swing.DefaultComboBoxModel(dados1));        
        
        if(acao!=0){
            combo_CorTag.setSelectedIndex(pos);
        }        
        /*****************************************************************/
        //PREECHENDO A TABELA Tag
        bd_Tag = new BD_Tag(kernel);
        Tag[] Tag_vetor = null;
        try {
            //VERIFICAR SE É BUSCA OU NÃO        
            Tag_vetor = bd_Tag.getTags();
        } catch (SQLException ex2) {
            Logger.getLogger(CadastrarTag.class.getName()).log(Level.SEVERE, null, ex2);
        }
        
        
        String dados[][] = new String[Tag_vetor.length][((acao==2)?7:6)];

        Tag obj_Tag = new Tag();
        for(int i=0; i < Tag_vetor.length; i++){
            obj_Tag = (Tag)Tag_vetor[i];
            dados[i][0] = String.valueOf(obj_Tag.getTag_id());
            dados[i][1] = obj_Tag.getCod_id();
            dados[i][2] = String.valueOf(obj_Tag.getTag());
            dados[i][3] = String.valueOf(obj_Tag.getCorTag().getNome());
            if(acao==2){                
                dados[i][editar] = "editar";
                dados[i][excluir] = "excluir";
                dados[i][selecionar] = "selecionar";
            }else{
                dados[i][editar] = "editar";
                dados[i][excluir] = "excluir";
            }   
         
        }
      
        
        tabela_Tag.setModel(new javax.swing.table.DefaultTableModel(
            dados,
            ((acao==2)?(new String [] {"Cod", "Cod ID","Tag","Cor Tag","","", ""}):(new String [] {"Cod", "Cod ID","Tag","Cor Tag","", ""}))){
            Class[] types = new Class [] {
                java.lang.String.class, 
                java.lang.String.class,
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
      
        tabela_Tag.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabela_Tag.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabela_Tag.getColumnModel().getColumn(1).setPreferredWidth(100);        
        tabela_Tag.getColumnModel().getColumn(2).setPreferredWidth(100);        
        tabela_Tag.getColumnModel().getColumn(3).setPreferredWidth(200);        
        if(acao==2){
            tabela_Tag.getColumnModel().getColumn(editar).setPreferredWidth(30);
            tabela_Tag.getColumnModel().getColumn(excluir).setPreferredWidth(30);
            tabela_Tag.getColumnModel().getColumn(selecionar).setPreferredWidth(30);
        }else{
            tabela_Tag.getColumnModel().getColumn(editar).setPreferredWidth(30);
            tabela_Tag.getColumnModel().getColumn(excluir).setPreferredWidth(30);
        }
        
        tabela_Tag.setDragEnabled(true);
        sp.setViewportView(tabela_Tag);        
        //ButtonColumn buttonColumn0 = new ButtonColumn(table, 0);//VER
        if(acao==2){
            ButtonColumnTag button1 = new ButtonColumnTag(tabela_Tag, editar);//EDITAR
            ButtonColumnTag button2 = new ButtonColumnTag(tabela_Tag, excluir);//EDITAR
            ButtonColumnTag button3 = new ButtonColumnTag(tabela_Tag, selecionar);//SELECIONAR
        }else{
            ButtonColumnTag button1 = new ButtonColumnTag(tabela_Tag, editar);//EDITAR
            ButtonColumnTag button2 = new ButtonColumnTag(tabela_Tag, excluir);//EXCLUIR
        }
    }

    //CLASSE BUTTONCOLUMN Tag
    class ButtonColumnTag extends AbstractCellEditor
         implements TableCellRenderer, TableCellEditor, ActionListener
     {
         JTable table;
         JButton renderButton;
         JButton editButton;
         String text;

         public ButtonColumnTag(JTable table, int column)
         {
             super();
             this.table = table;
             renderButton = new JButton();

             editButton = new JButton();
             
             editButton.setFocusPainted( false );
             editButton.addActionListener( this );

             TableColumnModel columnModel = table.getColumnModel();
             columnModel.getColumn(column).setCellRenderer( this );
             columnModel.getColumn(column).setCellEditor( this );
         }

         public Component getTableCellRendererComponent(
             JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
         {
             if (hasFocus)
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }
             else if (isSelected)
             {
                 renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
             else
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }

             renderButton.setBackground(new java.awt.Color(255, 255, 255));
             renderButton.setBorder(null);
             renderButton.setBorderPainted(false);
             renderButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

             text = (value == null) ? "" : value.toString();
             String imagem1 = "";
             if(text.equals("selecionar")){
                 imagem1 = "select";
             }else{
                 imagem1 = text.equals("excluir")?"lixeira":"editar";
             }
             renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem1+".png")));
             return renderButton;
         }

         public Component getTableCellEditorComponent(
             JTable table, Object value, boolean isSelected, int row, int column)
         {
             text = (value == null) ? "" : value.toString();             
             String imagem2 = text.equals("excluir")?"lixeira":"editar";
             editButton.setBackground(new java.awt.Color(255, 255, 255));
             editButton.setBorder(null);
             editButton.setBorderPainted(false);             
             editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem2+".png")));
             editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
             //editButton.setText( text );
             return editButton;
         }

         public Object getCellEditorValue()
         {
             return text;
        }

         public void actionPerformed(ActionEvent e)
         {
             fireEditingStopped();

             switch(table.getSelectedColumn()){
                 case excluir:
                     SolicitaConfirmacaoTag();
                     TabelaTag();
                 break;
                 case editar:
                     int id_reg = Integer.parseInt(table.getValueAt(table.getSelectedRow(),0).toString());
                     obj_Tag = bd_Tag.getTagID(id_reg);
                     nome_CodID.setText(obj_Tag.getCod_id());
                     nome_Tag.setText(String.valueOf(obj_Tag.getTag()));
                     
                     Tag_id.setText(String.valueOf(obj_Tag.getTag_id()));
                     CorTag_id.setText(String.valueOf(obj_Tag.getCorTag().getCortag_id()));
                     
                     combo_CorTag.setSelectedItem((Object)obj_Tag.getCorTag().getNome().toUpperCase());
                             
                 break;
                 case selecionar:
                     Object objeto = Animal_id.getText()+"-"+Integer.parseInt(table.getValueAt(table.getSelectedRow(),0).toString());
                     kernel.Tela(22, kernel,1,objeto,null);
                 break;    
                 default:
                     kernel.Tela(0, kernel, 0,null,null);
                 break;
             }
             //System.out.println( "DADOS : " + table.getSelectedRow()+" "+" "+table.getSelectedColumn()+" "+table.getColumnCount()+" "+table.getValueAt(table.getSelectedRow(),0));
             
         }
     }
    private void SolicitaConfirmacaoTag(){
     boolean escolha = false;

     Object[] options = {"Sim",
                    "Não"};
    int resposta = JOptionPane.showOptionDialog(this,
        "Desejas excluir o registro ?",
        "Exclusão",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE,
        null,     //do not use a custom Icon
        options,  //the titles of buttons
        options[1]);
     
     if (resposta == 0) {
       bd_Tag.Excluir(Integer.parseInt(tabela_Tag.getValueAt(tabela_Tag.getSelectedRow(),0).toString()));
     }
     
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Animal_id;
    private javax.swing.JLabel CorTag_id;
    private javax.swing.JLabel Tag_id;
    private javax.swing.JButton busca_CorTag;
    private javax.swing.JComboBox combo_CorTag;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nome_CodID;
    private javax.swing.JTextField nome_Tag;
    private javax.swing.JPanel painel_cadastrar_area3;
    private javax.swing.JButton salvar_Tag;
    private javax.swing.JScrollPane sp;
    private javax.swing.JTable tabela_Tag;
    // End of variables declaration//GEN-END:variables

}
