/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastrarCarrapato.java
 *
 * Created on 14/02/2011, 18:44:34
 */

package telas;

import banco.BD_Carrapato;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import java.util.Date;
import java.text.ParseException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import objetos.Kernel;
import objetos.Carrapato;
import objetos.Animal;

/**
 *
 * @author vagner
 */
public class CadastrarCarrapato extends javax.swing.JPanel {

    private Kernel          kernel;         
    private Carrapato       obj_Carrapato;    
    private Animal          obj_Animal;    
    private BD_Carrapato    bd_Carrapato;    
    private int             acao;
    private Object          objeto;
    private final int editar     = 3;
    private final int excluir    = 4;    
    
    /** Creates new form CadastrarAnimais */
    public CadastrarCarrapato(Kernel obj,int acao,Object ob) {
        kernel = obj;
        this.acao = acao;
        this.objeto = ob;
        initComponents();                
        this.TabelaCarrapato();  
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel_cadastrar_area3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        campo_quantidade = new javax.swing.JTextField();
        salvar_Tag = new javax.swing.JButton();
        carrapato_id = new javax.swing.JLabel();
        campo_dia = new javax.swing.JTextField();
        animal_id = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        campo_mes = new javax.swing.JTextField();
        campo_ano = new javax.swing.JTextField();
        botao_voltar = new javax.swing.JButton();
        sp = new javax.swing.JScrollPane();
        tabela_Carrapato = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 204));

        painel_cadastrar_area3.setBackground(new java.awt.Color(204, 204, 204));
        painel_cadastrar_area3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Quantidade:");

        campo_quantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_quantidadeKeyPressed(evt);
            }
        });

        salvar_Tag.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/salvar.png"))); // NOI18N
        salvar_Tag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvar_TagActionPerformed(evt);
            }
        });

        carrapato_id.setForeground(new java.awt.Color(204, 204, 204));
        carrapato_id.setText("0");

        animal_id.setForeground(new java.awt.Color(204, 204, 204));
        animal_id.setText("0");

        jLabel1.setText("Data:");

        botao_voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/back.png"))); // NOI18N
        botao_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botao_voltarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout painel_cadastrar_area3Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area3);
        painel_cadastrar_area3.setLayout(painel_cadastrar_area3Layout);
        painel_cadastrar_area3Layout.setHorizontalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .add(animal_id)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(carrapato_id)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 286, Short.MAX_VALUE))
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(campo_quantidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(campo_dia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(1, 1, 1)
                        .add(campo_mes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(1, 1, 1)
                        .add(campo_ano, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(botao_voltar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(salvar_Tag, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(59, 59, 59))
        );
        painel_cadastrar_area3Layout.setVerticalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(salvar_Tag)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, painel_cadastrar_area3Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel4)
                            .add(campo_quantidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1)
                            .add(campo_dia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(campo_mes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(campo_ano, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(carrapato_id)
                            .add(animal_id)))
                    .add(botao_voltar))
                .addContainerGap())
        );

        tabela_Carrapato.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Cod", "Quantidade", "Data", "Editar", "Excluir"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela_Carrapato.setDragEnabled(true);
        tabela_Carrapato.setRowHeight(25);
        tabela_Carrapato.getTableHeader().setReorderingAllowed(false);
        sp.setViewportView(tabela_Carrapato);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
            .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(sp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void campo_quantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_quantidadeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            SalvarCarrapato();
        }
}//GEN-LAST:event_campo_quantidadeKeyPressed

    private void salvar_TagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvar_TagActionPerformed
        // TODO add your handling code here:
        SalvarCarrapato();
}//GEN-LAST:event_salvar_TagActionPerformed

    private void botao_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botao_voltarActionPerformed
        // TODO add your handling code here:
        kernel.Tela(21,null,2,animal_id.getText(),null);
}//GEN-LAST:event_botao_voltarActionPerformed

    //SALVAR Carrapato
    private void SalvarCarrapato(){
        obj_Carrapato = new Carrapato();
        bd_Carrapato  = new BD_Carrapato(kernel);
        obj_Animal    = new Animal();
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
        Date date = new Date(); 
        
        //SETANDO OS VALORES DO CARRAPATO
        obj_Carrapato.setQuantidade(Integer.parseInt((campo_quantidade.getText().equals(""))?"0":campo_quantidade.getText()));
        String sDate = ((campo_ano.getText().equals(""))?"0000":campo_ano.getText())+"-"+((campo_mes.getText().equals(""))?"00":campo_mes.getText())+"-"+((campo_dia.getText().equals(""))?"00":campo_dia.getText());
            try {
                obj_Carrapato.setData(dateFormat.parse(sDate));
            } catch (ParseException ex) {
                Logger.getLogger(CadastrarData.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        //SETNANDO OS DADOS DOS ANIMAIS
        obj_Animal.setAnimal_id(Integer.parseInt(animal_id.getText()));
        obj_Carrapato.setAnimal(obj_Animal);
        
        
        if(carrapato_id.getText().equals("0")){                                
            bd_Carrapato.Salvar(obj_Carrapato);                
        }else{
            obj_Carrapato.setCarrapato_id(Integer.parseInt(carrapato_id.getText()));
            bd_Carrapato.Atualizar(obj_Carrapato);
        }
        TabelaCarrapato();
        campo_quantidade.setText(""); 
        campo_dia.setText(""); 
        campo_mes.setText(""); 
        campo_ano.setText(""); 
        
    }
    
    //TABELA Carrapato
    public void TabelaCarrapato(){

        //SETANDO O ANIMAL
        animal_id.setText((String)objeto);
        
        //PREECHENDO A TABELA Carrapato
        bd_Carrapato = new BD_Carrapato(kernel);
        Carrapato[] Carrapato_vetor = null;
        try {
            //VERIFICAR SE É BUSCA OU NÃO        
            Carrapato_vetor = bd_Carrapato.getCarrapatos(Integer.parseInt((String)objeto));
        } catch (SQLException ex2) {
            Logger.getLogger(CadastrarCarrapato.class.getName()).log(Level.SEVERE, null, ex2);
        }
        
        
        String dados[][] = new String[Carrapato_vetor.length][5];

        Carrapato obj_Carrapato = new Carrapato();
        for(int i=0; i < Carrapato_vetor.length; i++){
            obj_Carrapato = (Carrapato)Carrapato_vetor[i];
            dados[i][0] = String.valueOf(obj_Carrapato.getCarrapato_id());
            dados[i][1] = String.valueOf(obj_Carrapato.getQuantidade());
            dados[i][2] = new SimpleDateFormat("dd/MM/yyyy").format(obj_Carrapato.getData());            
            dados[i][editar] = "editar";
            dados[i][excluir] = "excluir";               
        }
      
        
        tabela_Carrapato.setModel(new javax.swing.table.DefaultTableModel(
            dados,
            new String [] {"Cod", "Quantidade","Data","", ""}){
            Class[] types = new Class [] {
                java.lang.String.class, 
                java.lang.String.class,
                java.lang.String.class, 
                java.lang.String.class,                  
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
      
        tabela_Carrapato.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabela_Carrapato.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabela_Carrapato.getColumnModel().getColumn(1).setPreferredWidth(100);        
        tabela_Carrapato.getColumnModel().getColumn(2).setPreferredWidth(100);                       
        tabela_Carrapato.getColumnModel().getColumn(editar).setPreferredWidth(30);
        tabela_Carrapato.getColumnModel().getColumn(excluir).setPreferredWidth(30);
        
        
        tabela_Carrapato.setDragEnabled(true);
        sp.setViewportView(tabela_Carrapato);        
        //ButtonColumn buttonColumn0 = new ButtonColumn(table, 0);//VER
        ButtonColumnCarrapato button1 = new ButtonColumnCarrapato(tabela_Carrapato, editar);//EDITAR
        ButtonColumnCarrapato button2 = new ButtonColumnCarrapato(tabela_Carrapato, excluir);//EXCLUIR
        
    }

    //CLASSE BUTTONCOLUMN Carrapato
    class ButtonColumnCarrapato extends AbstractCellEditor
         implements TableCellRenderer, TableCellEditor, ActionListener
     {
         JTable table;
         JButton renderButton;
         JButton editButton;
         String text;

         public ButtonColumnCarrapato(JTable table, int column)
         {
             super();
             this.table = table;
             renderButton = new JButton();

             editButton = new JButton();
             
             editButton.setFocusPainted( false );
             editButton.addActionListener( this );

             TableColumnModel columnModel = table.getColumnModel();
             columnModel.getColumn(column).setCellRenderer( this );
             columnModel.getColumn(column).setCellEditor( this );
         }

         public Component getTableCellRendererComponent(
             JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
         {
             if (hasFocus)
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }
             else if (isSelected)
             {
                 renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
             else
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }

             renderButton.setBackground(new java.awt.Color(255, 255, 255));
             renderButton.setBorder(null);
             renderButton.setBorderPainted(false);
             renderButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

             text = (value == null) ? "" : value.toString();
             String imagem1 = "";
             if(text.equals("selecionar")){
                 imagem1 = "select";
             }else{
                 imagem1 = text.equals("excluir")?"lixeira":"editar";
             }
             renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem1+".png")));
             return renderButton;
         }

         public Component getTableCellEditorComponent(
             JTable table, Object value, boolean isSelected, int row, int column)
         {
             text = (value == null) ? "" : value.toString();             
             String imagem2 = text.equals("excluir")?"lixeira":"editar";
             editButton.setBackground(new java.awt.Color(255, 255, 255));
             editButton.setBorder(null);
             editButton.setBorderPainted(false);             
             editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem2+".png")));
             editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
             //editButton.setText( text );
             return editButton;
         }

         public Object getCellEditorValue()
         {
             return text;
        }

         public void actionPerformed(ActionEvent e)
         {
             fireEditingStopped();

             switch(table.getSelectedColumn()){
                 case excluir:
                     SolicitaConfirmacaoCarrapato();
                     TabelaCarrapato();
                 break;
                 case editar:
                     int id_reg = Integer.parseInt(table.getValueAt(table.getSelectedRow(),0).toString());
                     obj_Carrapato = bd_Carrapato.getCarrapatoID(id_reg);
                     
                     campo_quantidade.setText(String.valueOf(obj_Carrapato.getQuantidade()));
                 
                     String strdata = new SimpleDateFormat("dd/MM/yyyy").format(obj_Carrapato.getData());
                     String vet[] = strdata.split("/");
                     
                     campo_dia.setText(vet[0]);
                     campo_mes.setText(vet[1]);
                     campo_ano.setText(vet[2]);
                     
                     carrapato_id.setText(String.valueOf(obj_Carrapato.getCarrapato_id()));
                     animal_id.setText(String.valueOf(obj_Carrapato.getAnimal().getAnimal_id()));
                     
                 break;    
                 default:
                     kernel.Tela(0, kernel, 0,null,null);
                 break;
             }
             //System.out.println( "DADOS : " + table.getSelectedRow()+" "+" "+table.getSelectedColumn()+" "+table.getColumnCount()+" "+table.getValueAt(table.getSelectedRow(),0));
             
         }
     }
    private void SolicitaConfirmacaoCarrapato(){
     boolean escolha = false;

     Object[] options = {"Sim",
                    "Não"};
    int resposta = JOptionPane.showOptionDialog(this,
        "Desejas excluir o registro ?",
        "Exclusão",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE,
        null,     //do not use a custom Icon
        options,  //the titles of buttons
        options[1]);
     
     if (resposta == 0) {
       bd_Carrapato.Excluir(Integer.parseInt(tabela_Carrapato.getValueAt(tabela_Carrapato.getSelectedRow(),0).toString()));
     }
     
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel animal_id;
    private javax.swing.JButton botao_voltar;
    private javax.swing.JTextField campo_ano;
    private javax.swing.JTextField campo_dia;
    private javax.swing.JTextField campo_mes;
    private javax.swing.JTextField campo_quantidade;
    private javax.swing.JLabel carrapato_id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel painel_cadastrar_area3;
    private javax.swing.JButton salvar_Tag;
    private javax.swing.JScrollPane sp;
    private javax.swing.JTable tabela_Carrapato;
    // End of variables declaration//GEN-END:variables

}
