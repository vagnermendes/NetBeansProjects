/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastrarVendas_old.java
 *
 * Created on 18/05/2011, 10:08:26
 */
package telas;

import banco.BD_Ouro;
import banco.BD_Produtos;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.util.Vector;
import objetos.Kernel;
import objetos.Ouro;
import objetos.Produtos;/**
 *
 * @author vagnerfeijomendes
 */
public class CadastrarVendas_old extends javax.swing.JPanel {

    private Kernel          kernel      = null; 
    private BD_Produtos     bd_Produto  = null;
    private BD_Ouro         bd_Ouro  = null;
    private Ouro            ouro;
    private Produtos        obj_Produtos= null;    
    private double ouromil = 0.0;
    private final int       selecionar  = 5;
    private final int       excluir     = 4;
    private static int      contador    = 0;
    private String          vetor[][]   = new String[1000][3];
    private Vector          vetorItem   = new Vector(); 
    private DecimalFormat fmt = new DecimalFormat("#0.00");
    /** Creates new form CadastrarVendas_old */
    public CadastrarVendas_old(Kernel obj,int acao,Object texto) {
        kernel = obj;
        initComponents();    
        bd_Produto = new BD_Produtos(kernel);
        bd_Ouro = new BD_Ouro(kernel);        
        ouro = bd_Ouro.getOuroID(1);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel_cadastrar_area3 = new javax.swing.JPanel();
        voltar = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        painel_cadastrar_area4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        campo_codigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campo_nome = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        sp1 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_busca = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        sp2 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela_carrinho = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        campo_total = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 241, 88));
        setForeground(new java.awt.Color(255, 241, 88));

        painel_cadastrar_area3.setBackground(new java.awt.Color(255, 241, 88));
        painel_cadastrar_area3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        painel_cadastrar_area3.setForeground(new java.awt.Color(255, 241, 88));

        voltar.setBackground(new java.awt.Color(255, 241, 88));
        voltar.setForeground(new java.awt.Color(255, 241, 88));
        voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/back.png"))); // NOI18N
        voltar.setToolTipText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        jLabel33.setText("Voltar");

        org.jdesktop.layout.GroupLayout painel_cadastrar_area3Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area3);
        painel_cadastrar_area3.setLayout(painel_cadastrar_area3Layout);
        painel_cadastrar_area3Layout.setHorizontalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .add(painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(voltar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(painel_cadastrar_area3Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel33)))
                .addContainerGap(1090, Short.MAX_VALUE))
        );
        painel_cadastrar_area3Layout.setVerticalGroup(
            painel_cadastrar_area3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area3Layout.createSequentialGroup()
                .add(voltar)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel33)
                .addContainerGap())
        );

        painel_cadastrar_area4.setBackground(new java.awt.Color(255, 241, 88));
        painel_cadastrar_area4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Busca Produtos"));
        painel_cadastrar_area4.setForeground(new java.awt.Color(255, 241, 88));

        jLabel1.setText("CÃ³digo de barras:");

        campo_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_codigoKeyPressed(evt);
            }
        });

        jLabel2.setText("Nome:");

        campo_nome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_nomeKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout painel_cadastrar_area4Layout = new org.jdesktop.layout.GroupLayout(painel_cadastrar_area4);
        painel_cadastrar_area4.setLayout(painel_cadastrar_area4Layout);
        painel_cadastrar_area4Layout.setHorizontalGroup(
            painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area4Layout.createSequentialGroup()
                .addContainerGap()
                .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel2)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, campo_codigo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, campo_nome))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        painel_cadastrar_area4Layout.setVerticalGroup(
            painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(painel_cadastrar_area4Layout.createSequentialGroup()
                .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(campo_codigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(painel_cadastrar_area4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(campo_nome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel1.setBackground(new java.awt.Color(255, 241, 88));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Lista busca"));
        jPanel1.setForeground(new java.awt.Color(255, 241, 88));

        tabela_busca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "Estoque", "Valor", "Quantidade", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabela_busca);

        sp1.setViewportView(jScrollPane1);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sp1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sp1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 241, 88));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Carrinho"));
        jPanel2.setForeground(new java.awt.Color(255, 241, 88));

        tabela_carrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "Quantidade", "Valor", "Remover"
            }
        ));
        jScrollPane2.setViewportView(tabela_carrinho);

        sp2.setViewportView(jScrollPane2);

        jLabel3.setText("Total pedido(R$):");

        campo_total.setEditable(false);

        jButton1.setText("Finalizar compra");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(campo_total, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 108, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton1))
                    .add(sp2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 607, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(campo_total, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(sp2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 598, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(painel_cadastrar_area4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 618, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(painel_cadastrar_area3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(painel_cadastrar_area4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        kernel.Tela(18,kernel,0,null,null);
}//GEN-LAST:event_voltarActionPerformed

    private void campo_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_codigoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            TabelaBusca(campo_codigo.getText());
        }
    }//GEN-LAST:event_campo_codigoKeyPressed

    private void campo_nomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_nomeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            TabelaBusca(campo_nome.getText());
        }        
    }//GEN-LAST:event_campo_nomeKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:        
        kernel.Tela(20,kernel,0,((Object)vetorItem),null);
    }//GEN-LAST:event_jButton1ActionPerformed

    public void LimparFormulario(){
        campo_codigo.setText("");
        campo_nome.setText("");
    }
    //produtos venda
    public void MontarTabelaPedido() {
            Double total = 0.0;
            String dados1[][] = new String[vetorItem.size()][6];
            for(int i=0; i< vetorItem.size();i++){                
                String vet[] = vetorItem.get(i).toString().split("-");
                try {
                obj_Produtos = bd_Produto.getProdutosID(Integer.parseInt(vet[0]));
                } catch (SQLException ex) {
                    Logger.getLogger(CadastrarVendas_old.class.getName()).log(Level.SEVERE, null, ex);
                }
                dados1[i][0] = String.valueOf(obj_Produtos.getProdutos_id());
                dados1[i][1] = String.valueOf(obj_Produtos.getNome());                  
                dados1[i][2] = vet[1];
                dados1[i][3] = fmt.format((Double.parseDouble(vet[1]))*((obj_Produtos.getIndice()!=0.0)?((obj_Produtos.getIndice())*(ouro.getNome())*(obj_Produtos.getPeso())*2):((obj_Produtos.getPreco_promocional()!=0.0)?obj_Produtos.getPreco_promocional():obj_Produtos.getPreco_venda())));
                dados1[i][excluir] = "excluir";                          
                total += (Double.parseDouble(vet[1]))*((obj_Produtos.getIndice()!=0.0)?((obj_Produtos.getIndice())*(ouro.getNome())*(obj_Produtos.getPeso())*2):((obj_Produtos.getPreco_promocional()!=0.0)?obj_Produtos.getPreco_promocional():obj_Produtos.getPreco_venda()));
            }
            //TOTAL DA COMPRA
            campo_total.setText(fmt.format(total));
            
            tabela_carrinho.setModel(new javax.swing.table.DefaultTableModel(
            dados1,
            new String [] {"Cod", "Nome","Quantidade","PreÃ§o",""}){
            Class[] types = new Class [] {
                java.lang.String.class,java.lang.String.class,java.lang.String.class,
                java.lang.String.class,java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
      
        tabela_carrinho.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabela_carrinho.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabela_carrinho.getColumnModel().getColumn(1).setPreferredWidth(250);        
        tabela_carrinho.getColumnModel().getColumn(2).setPreferredWidth(150);
        tabela_carrinho.getColumnModel().getColumn(3).setPreferredWidth(80);
        tabela_carrinho.getColumnModel().getColumn(excluir).setPreferredWidth(30);
        
        tabela_carrinho.setDragEnabled(true);
        sp2.setViewportView(tabela_carrinho);        
        //ButtonColumn buttonColumn0 = new ButtonColumn(table, 0);//VER
        ButtonColumnProdutos buttonColumnProdutos = new ButtonColumnProdutos(tabela_carrinho, excluir);//EDITAR
            
            TabelaBusca("");
        }
    
    //tabela_busca Produtos
    public void TabelaBusca(String obj){        
        
        Produtos[] Produtos_vetor = null;
        try {       
            if(!obj.equals("")){
                Produtos_vetor = bd_Produto.getProdutosNome(obj);
            }
            
        } catch (SQLException ex2) {
            Logger.getLogger(CadastrarVendas_old.class.getName()).log(Level.SEVERE, null, ex2);
        }
        int tamanho = (obj.equals("")?0:Produtos_vetor.length);
        String dados[][] = new String[tamanho][6];
        
        Produtos esp = new Produtos();

        for(int i=0; i < tamanho; i++){
            esp = (Produtos)Produtos_vetor[i];
            dados[i][0] = String.valueOf(esp.getProdutos_id());
            dados[i][1] = String.valueOf(esp.getNome());
            dados[i][2] = fmt.format(((esp.getIndice()!=0)?((((esp.getIndice()!=0.0)?((esp.getIndice())*(ouro.getNome())*(esp.getPeso())):((esp.getPreco_promocional()!=0.0)?esp.getPreco_promocional():esp.getPreco_venda())))*2):((esp.getPreco_promocional()!=0.0)?esp.getPreco_promocional():esp.getPreco_venda())));
            dados[i][3] = String.valueOf(esp.getQuantidade());
            dados[i][4] = "1";
            dados[i][selecionar] = "selecionar";
         
        }
      
        if(obj.equals("")){dados = null;}
        
        tabela_busca.setModel(new javax.swing.table.DefaultTableModel(
            dados,
            new String [] {"Cod", "Nome","PreÃ§o","Estoque","Quant.",""}){
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class,java.lang.String.class
                ,java.lang.String.class,java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        int pos=0;
        tabela_busca.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tabela_busca.getColumnModel().getColumn(pos++).setPreferredWidth(50);
        tabela_busca.getColumnModel().getColumn(pos++).setPreferredWidth(250);
        tabela_busca.getColumnModel().getColumn(pos++).setPreferredWidth(150);
        tabela_busca.getColumnModel().getColumn(pos++).setPreferredWidth(50);
        tabela_busca.getColumnModel().getColumn(pos++).setPreferredWidth(50);
        tabela_busca.getColumnModel().getColumn(selecionar).setPreferredWidth(30);
        
        tabela_busca.setDragEnabled(true);
        sp1.setViewportView(tabela_busca);        
        //ButtonColumn buttonColumn0 = new ButtonColumn(table, 0);//VER
        ButtonColumnBusca buttonColumnBusca = new ButtonColumnBusca(tabela_busca, selecionar);//EDITAR
    }

    //CLASSE BUTTONCOLUMN Produtos
    class ButtonColumnProdutos extends AbstractCellEditor
         implements TableCellRenderer, TableCellEditor, ActionListener
     {
         JTable table;
         JButton renderButton;
         JButton editButton;
         String text;

         public ButtonColumnProdutos(JTable table, int column)
         {
             super();
             this.table = table;
             renderButton = new JButton();

             editButton = new JButton();
             
             editButton.setFocusPainted( false );
             editButton.addActionListener( this );

             TableColumnModel columnModel = table.getColumnModel();
             columnModel.getColumn(column).setCellRenderer( this );
             columnModel.getColumn(column).setCellEditor( this );
         }

         public Component getTableCellRendererComponent(
             JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
         {
             if (hasFocus)
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }
             else if (isSelected)
             {
                 renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
             else
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }

             renderButton.setBackground(new java.awt.Color(255, 255, 255));
             renderButton.setBorder(null);
             renderButton.setBorderPainted(false);
             renderButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

             text = (value == null) ? "" : value.toString();
             String imagem1 = text.equals("excluir")?"lixeira":"editar";
             renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem1+".png")));
             return renderButton;
         }

         public Component getTableCellEditorComponent(
             JTable table, Object value, boolean isSelected, int row, int column)
         {
             text = (value == null) ? "" : value.toString();             
             String imagem2 = text.equals("excluir")?"lixeira":"editar";
             editButton.setBackground(new java.awt.Color(255, 255, 255));
             editButton.setBorder(null);
             editButton.setBorderPainted(false);             
             editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem2+".png")));
             editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
             //editButton.setText( text );
             return editButton;
         }

         public Object getCellEditorValue()
         {
             return text;
        }

         public void actionPerformed(ActionEvent e)
         {
             fireEditingStopped();

             switch(table.getSelectedColumn()){
                 case excluir:
                     SolicitaConfirmacao();
                 break;
                 default:
                     kernel.Tela(0, kernel, 0,null,null);
                 break;
             }
             
         }
     }
    private void SolicitaConfirmacao(){
     boolean escolha = false;

     Object[] options = {"Sim",
                    "NÃ£o"};
    int resposta = JOptionPane.showOptionDialog(this,
        "Desejas excluir o registro ?",
        "ExclusÃ£o",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.WARNING_MESSAGE,
        null,     //do not use a custom Icon
        options,  //the titles of buttons
        options[1]);
     
     if (resposta == 0) {
       
         vetorItem.remove(tabela_carrinho.getValueAt(tabela_carrinho.getSelectedRow(),0).toString()+"-"+
                        tabela_carrinho.getValueAt(tabela_carrinho.getSelectedRow(),2).toString());       
         MontarTabelaPedido();
     }
     
    }
    
    //CLASSE BUTTONCOLUMN Produtos
    class ButtonColumnBusca extends AbstractCellEditor
         implements TableCellRenderer, TableCellEditor, ActionListener
     {
         JTable table;
         JButton renderButton;
         JButton editButton;
         String text;

         public ButtonColumnBusca(JTable table, int column)
         {
             super();
             this.table = table;
             renderButton = new JButton();

             editButton = new JButton();
             
             editButton.setFocusPainted( false );
             editButton.addActionListener( this );

             TableColumnModel columnModel = table.getColumnModel();
             columnModel.getColumn(column).setCellRenderer( this );
             columnModel.getColumn(column).setCellEditor( this );
         }

         public Component getTableCellRendererComponent(
             JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
         {
             if (hasFocus)
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }
             else if (isSelected)
             {
                 renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
             else
             {
                 renderButton.setForeground(table.getForeground());
                 renderButton.setBackground(UIManager.getColor("Button.background"));
             }

             renderButton.setBackground(new java.awt.Color(255, 255, 255));
             renderButton.setBorder(null);
             renderButton.setBorderPainted(false);
             renderButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

             String imagem1 = "select";
             renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem1+".png")));
             return renderButton;
         }

         public Component getTableCellEditorComponent(
             JTable table, Object value, boolean isSelected, int row, int column)
         {
             text = (value == null) ? "" : value.toString();             
             String imagem2 = "select";
             editButton.setBackground(new java.awt.Color(255, 255, 255));
             editButton.setBorder(null);
             editButton.setBorderPainted(false);             
             editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/"+imagem2+".png")));
             editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
             //editButton.setText( text );
             return editButton;
         }

         public Object getCellEditorValue()
         {
             return text;
        }

         public void actionPerformed(ActionEvent e)
         {
             fireEditingStopped();

             switch(table.getSelectedColumn()){
                 case selecionar:   
                 //System.out.println(tabela_busca.getValueAt(tabela_busca.getSelectedRow(),0).toString()+" "+tabela_busca.getValueAt(tabela_busca.getSelectedRow(),4).toString());
                 vetorItem.add(Integer.parseInt(tabela_busca.getValueAt(tabela_busca.getSelectedRow(),0).toString())+"-"+
                                    Integer.parseInt(tabela_busca.getValueAt(tabela_busca.getSelectedRow(),4).toString()));
                 MontarTabelaPedido();
                 LimparFormulario();
                 break;
                 default:
                     kernel.Tela(0, kernel, 0,null,null);
                 break;
             }
             
         }

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField campo_codigo;
    private javax.swing.JTextField campo_nome;
    private javax.swing.JTextField campo_total;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel painel_cadastrar_area3;
    private javax.swing.JPanel painel_cadastrar_area4;
    private javax.swing.JScrollPane sp1;
    private javax.swing.JScrollPane sp2;
    private javax.swing.JTable tabela_busca;
    private javax.swing.JTable tabela_carrinho;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables

}
